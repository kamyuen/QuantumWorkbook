(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    214037,       4610]
NotebookOptionsPosition[    202043,       4333]
NotebookOutlinePosition[    205833,       4435]
CellTagsIndexPosition[    205513,       4422]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Decoherence", "Title",
 CellChangeTimes->{{3.81848277080221*^9, 3.818482778013246*^9}, {
  3.822802957823658*^9, 
  3.822802959252193*^9}},ExpressionUUID->"b9269d85-53e8-4b1a-8e3e-\
227531db259b"],

Cell[BoxData[{
 RowBox[{"<<", "Q3`"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "Q3`Kraus`"}]}], "Input",
 CellEpilog:>Needs["QuantumWorkbook`Custom`"],
 CellChangeTimes->{{3.8228029525833807`*^9, 3.822802954675468*^9}, {
  3.824002470339212*^9, 3.8240024769295273`*^9}, {3.827028661142477*^9, 
  3.8270286614095287`*^9}, {3.8284052033518047`*^9, 3.82840520591675*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"e413860f-2c01-4a38-8435-7222f9cbb255"],

Cell[BoxData[
 RowBox[{"Let", "[", 
  RowBox[{"Qubit", ",", "S"}], "]"}]], "Input",
 CellChangeTimes->{{3.822802963010672*^9, 3.822802964854642*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"c494dd96-3d55-4e9b-80f6-3a2c6f835c3e"],

Cell[BoxData[
 FormBox[GridBox[{
    {
     ButtonBox[
      PaneSelectorBox[{False->"\<\"Quantum Operations\"\>", True->
       StyleBox["\<\"Quantum Operations\"\>", "HyperlinkActive",
        StripOnInput->False]}, Dynamic[
        CurrentValue["MouseOver"]],
       FrameMargins->0,
       ImageSize->Automatic],
      Alignment->Left,
      Appearance->None,
      BaseStyle->"Hyperlink",
      ButtonFunction:>NotebookLocate["Section17"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      PaneSelectorBox[{
       False->"\<\"Generalized Measurement as Quantum Operations\"\>", True->
       StyleBox["\<\"Generalized Measurement as Quantum Operations\"\>", 
        "HyperlinkActive",
        StripOnInput->False]}, Dynamic[
        CurrentValue["MouseOver"]],
       FrameMargins->0,
       ImageSize->Automatic],
      Alignment->Left,
      Appearance->None,
      BaseStyle->"Hyperlink",
      ButtonFunction:>NotebookLocate["Section18"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      PaneSelectorBox[{False->"\<\"Quantum Master Equations\"\>", True->
       StyleBox["\<\"Quantum Master Equations\"\>", "HyperlinkActive",
        StripOnInput->False]}, Dynamic[
        CurrentValue["MouseOver"]],
       FrameMargins->0,
       ImageSize->Automatic],
      Alignment->Left,
      Appearance->None,
      BaseStyle->"Hyperlink",
      ButtonFunction:>NotebookLocate["Section19"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      PaneSelectorBox[{False->"\<\"\\tDerivation\"\>", True->
       StyleBox["\<\"\\tDerivation\"\>", "HyperlinkActive",
        StripOnInput->False]}, Dynamic[
        CurrentValue["MouseOver"]],
       FrameMargins->0,
       ImageSize->Automatic],
      Alignment->Left,
      Appearance->None,
      BaseStyle->"Hyperlink",
      ButtonFunction:>NotebookLocate["Section11"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      PaneSelectorBox[{False->"\<\"\\tExamples\"\>", True->
       StyleBox["\<\"\\tExamples\"\>", "HyperlinkActive",
        StripOnInput->False]}, Dynamic[
        CurrentValue["MouseOver"]],
       FrameMargins->0,
       ImageSize->Automatic],
      Alignment->Left,
      Appearance->None,
      BaseStyle->"Hyperlink",
      ButtonFunction:>NotebookLocate["Section12"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      PaneSelectorBox[{False->"\<\"\\tSolution Methods\"\>", True->
       StyleBox["\<\"\\tSolution Methods\"\>", "HyperlinkActive",
        StripOnInput->False]}, Dynamic[
        CurrentValue["MouseOver"]],
       FrameMargins->0,
       ImageSize->Automatic],
      Alignment->Left,
      Appearance->None,
      BaseStyle->"Hyperlink",
      ButtonFunction:>NotebookLocate["Section13"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      PaneSelectorBox[{False->"\<\"Fidelity and Trace Distance\"\>", True->
       StyleBox["\<\"Fidelity and Trace Distance\"\>", "HyperlinkActive",
        StripOnInput->False]}, Dynamic[
        CurrentValue["MouseOver"]],
       FrameMargins->0,
       ImageSize->Automatic],
      Alignment->Left,
      Appearance->None,
      BaseStyle->"Hyperlink",
      ButtonFunction:>NotebookLocate["Section20"],
      Evaluator->Automatic,
      Method->"Preemptive"]},
    {
     ButtonBox[
      PaneSelectorBox[{
       False->"\<\"Entanglement, Entropy, Mutual Information\"\>", True->
       StyleBox["\<\"Entanglement, Entropy, Mutual Information\"\>", 
        "HyperlinkActive",
        StripOnInput->False]}, Dynamic[
        CurrentValue["MouseOver"]],
       FrameMargins->0,
       ImageSize->Automatic],
      Alignment->Left,
      Appearance->None,
      BaseStyle->"Hyperlink",
      ButtonFunction:>NotebookLocate["Section21"],
      Evaluator->Automatic,
      Method->"Preemptive"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
  Column]], "Text",
 CellFrame->{{0, 0}, {0, 0.5}},
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellFrameColor->GrayLevel[0.7],
 CellTags->"TableOfContents",
 CellID->505790733,ExpressionUUID->"8eb87862-8a7a-46f7-b663-9a2dca507f44"],

Cell["Quantum Operations", "Section",
 CellChangeTimes->{{3.818482785696848*^9, 3.818482788565215*^9}},
 CellTags->"Section17",
 CellID->1928249408,ExpressionUUID->"fa9ff27c-87ff-46e9-bf50-7c1317b795c2"],

Cell["Generalized Measurement as Quantum Operations", "Section",
 CellChangeTimes->{{3.818482810468948*^9, 3.818482818601832*^9}},
 CellTags->"Section18",
 CellID->412083379,ExpressionUUID->"b0d572e6-3885-41cf-9b48-9851e334fa35"],

Cell[CellGroupData[{

Cell["Quantum Master Equations", "Section",
 CellChangeTimes->{{3.8184828224835243`*^9, 3.818482831124168*^9}},
 CellTags->"Section19",
 CellID->250589278,ExpressionUUID->"9c99e641-43e1-466c-9420-861fa99d3d8b"],

Cell["Derivation", "Subsection",
 CellChangeTimes->{{3.8284039030646963`*^9, 3.828403904988215*^9}},
 CellTags->"Section11",
 CellID->1423253627,ExpressionUUID->"c7a390ed-699b-48e6-82c7-b3be738dd111"],

Cell["Examples", "Subsection",
 CellChangeTimes->{{3.82840391401058*^9, 3.828403914718603*^9}},
 CellTags->"Section12",
 CellID->830799894,ExpressionUUID->"675ea5db-d943-4b5f-bdd1-9d64829fb4ed"],

Cell[CellGroupData[{

Cell["Solution Methods", "Subsection",
 CellChangeTimes->{{3.828403919117437*^9, 3.828403921727541*^9}},
 CellTags->"Section13",
 CellID->702989565,ExpressionUUID->"aa28c2d3-a5f5-4a00-b4bc-b08cf4f4fe24"],

Cell[CellGroupData[{

Cell["\<\
Consider the Lindblad equation for a single-qubit system with the effective \
Hamiltonian and the Lindblad operators as following:\
\>", "MathCaption",
 CellChangeTimes->{{3.8284049825817623`*^9, 3.828405069551162*^9}},
 CellID->2033884322,ExpressionUUID->"ebd3c59d-44a9-4630-a179-f669e0c63498"],

Cell[BoxData[
 RowBox[{"Let", "[", 
  RowBox[{
  "Real", ",", "\[CapitalOmega]", ",", "\[CapitalDelta]", ",", 
   "\[CapitalGamma]"}], "]"}]], "Input",
 CellChangeTimes->{{3.828405080452649*^9, 3.8284050894295273`*^9}, {
  3.828405173451295*^9, 3.828405176859417*^9}},
 CellLabel->"In[64]:=",
 CellID->1723367126,ExpressionUUID->"7399f7aa-c17e-43bf-8722-1c973b9eba10"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"opH", "=", 
  RowBox[{
   RowBox[{"\[CapitalDelta]", " ", 
    RowBox[{
     RowBox[{"S", "[", "1", "]"}], "/", "2"}]}], "+", 
   RowBox[{"\[CapitalOmega]", " ", 
    RowBox[{
     RowBox[{"S", "[", "3", "]"}], "/", "2"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"opL", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}], "]"}], 
     RowBox[{"S", "[", "4", "]"}]}], ",", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}], "]"}], 
     RowBox[{"S", "[", "5", "]"}]}]}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.82840492812462*^9, 3.828404963345688*^9}, {
  3.828405071542552*^9, 3.828405169007251*^9}},
 CellLabel->"In[65]:=",
 CellID->1479265243,ExpressionUUID->"9c52f8ca-2d85-4e43-a89b-c3894a731c1f"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"\[CapitalDelta]", " ", 
    TemplateBox[{
      TemplateBox[{"S"}, "RowDefault"], 
      TemplateBox[{"\"x\""}, "RowDefault"]},
     "Superscript"]}], "2"], "+", 
  FractionBox[
   RowBox[{"\[CapitalOmega]", " ", 
    TemplateBox[{
      TemplateBox[{"S"}, "RowDefault"], 
      TemplateBox[{"\"z\""}, "RowDefault"]},
     "Superscript"]}], "2"]}]], "Output",
 CellChangeTimes->{{3.828405133471937*^9, 3.8284051806664877`*^9}, 
   3.828405451277707*^9},
 CellLabel->"Out[65]=",
 CellID->223096901,ExpressionUUID->"70e65bbd-448e-48c3-b8df-e8c9bc720274"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TemplateBox[{
      TemplateBox[{"S"}, "RowDefault"], 
      TemplateBox[{"\"+\""}, "RowDefault"]},
     "Superscript"], " ", 
    SqrtBox[
     SubscriptBox[
      TemplateBox[{"\[CapitalGamma]"},
       "RowDefault"], 
      TemplateBox[{"\"+\""},
       "RowDefault"]]]}], ",", 
   RowBox[{
    TemplateBox[{
      TemplateBox[{"S"}, "RowDefault"], 
      TemplateBox[{"\"-\""}, "RowDefault"]},
     "Superscript"], " ", 
    SqrtBox[
     SubscriptBox[
      TemplateBox[{"\[CapitalGamma]"},
       "RowDefault"], 
      TemplateBox[{"\"-\""},
       "RowDefault"]]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.828405133471937*^9, 3.8284051806664877`*^9}, 
   3.8284054512792463`*^9},
 CellLabel->"Out[66]=",
 CellID->83167445,ExpressionUUID->"255341a1-15d7-45ce-87be-07e0b8e1f27b"]
}, Open  ]],

Cell["\<\
This is the naive form of the generator matrix corresponding to the Lindblad \
equation without taking into account the Hemicity condition and the \
probability conservation condition.\
\>", "Text",
 CellChangeTimes->{{3.82840545863687*^9, 3.8284055577098637`*^9}},
 CellID->1680926448,ExpressionUUID->"1b688c89-2ae3-4480-822f-d783b9bc6ca8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mat", "=", 
   RowBox[{"ChoiMatrix", "@", 
    RowBox[{"LindbladGenerator", "[", 
     RowBox[{"opH", ",", "opL"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mat", "=", 
   RowBox[{"ArrayReshape", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"mat", ",", 
       RowBox[{"2", "\[TwoWayRule]", "3"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "4"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"mat", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.828405238506854*^9, 3.8284053025186663`*^9}},
 CellLabel->"In[83]:=",
 CellID->207320120,ExpressionUUID->"4c13d650-e480-4ef2-b019-c6848d73478d"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{"-", 
       SubscriptBox[
        TemplateBox[{"\[CapitalGamma]"},
         "RowDefault"], 
        TemplateBox[{"\"-\""},
         "RowDefault"]]}], 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", "\[CapitalDelta]"}], "2"], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", "\[CapitalDelta]"}], "2"]}], 
      SubscriptBox[
       TemplateBox[{"\[CapitalGamma]"},
        "RowDefault"], 
       TemplateBox[{"\"+\""},
        "RowDefault"]]},
     {
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", "\[CapitalDelta]"}], "2"], 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "\[CapitalOmega]"}], "-", 
       FractionBox[
        SubscriptBox[
         TemplateBox[{"\[CapitalGamma]"},
          "RowDefault"], 
         TemplateBox[{"\"-\""},
          "RowDefault"]], "2"], "-", 
       FractionBox[
        SubscriptBox[
         TemplateBox[{"\[CapitalGamma]"},
          "RowDefault"], 
         TemplateBox[{"\"+\""},
          "RowDefault"]], "2"]}], "0", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", "\[CapitalDelta]"}], "2"]}]},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", "\[CapitalDelta]"}], "2"]}], "0", 
      RowBox[{
       RowBox[{"\[ImaginaryI]", " ", "\[CapitalOmega]"}], "-", 
       FractionBox[
        SubscriptBox[
         TemplateBox[{"\[CapitalGamma]"},
          "RowDefault"], 
         TemplateBox[{"\"-\""},
          "RowDefault"]], "2"], "-", 
       FractionBox[
        SubscriptBox[
         TemplateBox[{"\[CapitalGamma]"},
          "RowDefault"], 
         TemplateBox[{"\"+\""},
          "RowDefault"]], "2"]}], 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", "\[CapitalDelta]"}], "2"]},
     {
      SubscriptBox[
       TemplateBox[{"\[CapitalGamma]"},
        "RowDefault"], 
       TemplateBox[{"\"-\""},
        "RowDefault"]], 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"\[ImaginaryI]", " ", "\[CapitalDelta]"}], "2"]}], 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", "\[CapitalDelta]"}], "2"], 
      RowBox[{"-", 
       SubscriptBox[
        TemplateBox[{"\[CapitalGamma]"},
         "RowDefault"], 
        TemplateBox[{"\"+\""},
         "RowDefault"]]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {4, 4}, 0, {
     1, {{0, 4, 7, 10, 14}, {{1}, {2}, {3}, {4}, {1}, {2}, {4}, {1}, {3}, {
       4}, {1}, {2}, {3}, {4}}}, {-$CellContext`\[CapitalGamma]["-"], 
       Complex[0, Rational[1, 2]] $CellContext`\[CapitalDelta], 
       Complex[0, 
         Rational[-1, 
          2]] $CellContext`\[CapitalDelta], $CellContext`\[CapitalGamma]["+"],
        Complex[0, Rational[1, 2]] $CellContext`\[CapitalDelta], 
       Complex[0, -1] $CellContext`\[CapitalOmega] + 
       Rational[-1, 2] $CellContext`\[CapitalGamma]["-"] + 
       Rational[-1, 2] $CellContext`\[CapitalGamma]["+"], 
       Complex[0, Rational[-1, 2]] $CellContext`\[CapitalDelta], 
       Complex[0, Rational[-1, 2]] $CellContext`\[CapitalDelta], 
       Complex[0, 1] $CellContext`\[CapitalOmega] + 
       Rational[-1, 2] $CellContext`\[CapitalGamma]["-"] + 
       Rational[-1, 2] $CellContext`\[CapitalGamma]["+"], 
       Complex[0, Rational[
         1, 2]] $CellContext`\[CapitalDelta], $CellContext`\[CapitalGamma][
       "-"], Complex[0, Rational[-1, 2]] $CellContext`\[CapitalDelta], 
       Complex[0, Rational[
         1, 2]] $CellContext`\[CapitalDelta], -$CellContext`\[CapitalGamma][
        "+"]}}]]]]], "Output",
 CellChangeTimes->{{3.828405253688983*^9, 3.8284052623662252`*^9}, {
   3.828405299007245*^9, 3.828405318945356*^9}, {3.8284054463574257`*^9, 
   3.828405451891985*^9}, 3.8284055047830467`*^9, 3.8284055590850773`*^9, {
   3.8284059817887278`*^9, 3.828405985329894*^9}},
 CellLabel->"Out[85]//MatrixForm=",
 CellID->899782906,ExpressionUUID->"61047160-eee8-455d-bd75-f8399e6f0777"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Rho]", "[", 
    RowBox[{"1", ",", "1"}], "]"}], "=", "z"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Rho]", "[", 
    RowBox[{"1", ",", "2"}], "]"}], "=", 
   RowBox[{"x", "+", 
    RowBox[{"I", " ", "y"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Rho]", "[", 
    RowBox[{"2", ",", "1"}], "]"}], "=", 
   RowBox[{"x", "+", 
    RowBox[{"I", " ", "y"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Rho]", "[", 
    RowBox[{"2", ",", "2"}], "]"}], "=", 
   RowBox[{"1", "-", 
    RowBox[{"\[Rho]", "[", 
     RowBox[{"1", ",", "1"}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8284060220785303`*^9, 3.8284060375861053`*^9}, {
  3.828406067892108*^9, 3.828406110189951*^9}},
 CellLabel->"In[116]:=",
 CellID->1274989594,ExpressionUUID->"8b22d473-4147-4c13-9782-73e7196725a2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"expr", "=", 
  RowBox[{"mat", ".", "rho"}]}], "\[IndentingNewLine]", 
 RowBox[{"dv", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{"z", ",", "x", ",", "y"}], "}"}]}], "]"}], "&"}], "/@", 
   "expr"}]}]}], "Input",
 CellChangeTimes->{{3.828406129382522*^9, 3.828406161464542*^9}, {
  3.828406493806365*^9, 3.828406494150484*^9}},
 CellLabel->"In[146]:=",
 CellID->533744095,ExpressionUUID->"f3633997-16e8-4338-9fd2-e23a22616e80"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", "z"}], " ", 
     SubscriptBox[
      TemplateBox[{"\[CapitalGamma]"},
       "RowDefault"], 
      TemplateBox[{"\"-\""},
       "RowDefault"]]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "z"}], ")"}], " ", 
     SubscriptBox[
      TemplateBox[{"\[CapitalGamma]"},
       "RowDefault"], 
      TemplateBox[{"\"+\""},
       "RowDefault"]]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], " ", "\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", "z"}], ")"}], " ", "\[CapitalDelta]"}], "+", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", "z", " ", "\[CapitalDelta]"}], "2"], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", "+", 
       RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "\[ImaginaryI]"}], " ", "\[CapitalOmega]"}], "-", 
       FractionBox[
        SubscriptBox[
         TemplateBox[{"\[CapitalGamma]"},
          "RowDefault"], 
         TemplateBox[{"\"-\""},
          "RowDefault"]], "2"], "-", 
       FractionBox[
        SubscriptBox[
         TemplateBox[{"\[CapitalGamma]"},
          "RowDefault"], 
         TemplateBox[{"\"+\""},
          "RowDefault"]], "2"]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{
     FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", "z"}], ")"}], " ", "\[CapitalDelta]"}], "-", 
    FractionBox[
     RowBox[{"\[ImaginaryI]", " ", "z", " ", "\[CapitalDelta]"}], "2"], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", "+", 
       RowBox[{"\[ImaginaryI]", " ", "y"}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[ImaginaryI]", " ", "\[CapitalOmega]"}], "-", 
       FractionBox[
        SubscriptBox[
         TemplateBox[{"\[CapitalGamma]"},
          "RowDefault"], 
         TemplateBox[{"\"-\""},
          "RowDefault"]], "2"], "-", 
       FractionBox[
        SubscriptBox[
         TemplateBox[{"\[CapitalGamma]"},
          "RowDefault"], 
         TemplateBox[{"\"+\""},
          "RowDefault"]], "2"]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{"z", " ", 
     SubscriptBox[
      TemplateBox[{"\[CapitalGamma]"},
       "RowDefault"], 
      TemplateBox[{"\"-\""},
       "RowDefault"]]}], "-", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "z"}], ")"}], " ", 
     SubscriptBox[
      TemplateBox[{"\[CapitalGamma]"},
       "RowDefault"], 
      TemplateBox[{"\"+\""},
       "RowDefault"]]}]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.828406153964718*^9, 3.828406161814437*^9}, {
   3.828406225044614*^9, 3.828406226407605*^9}, {3.82840649450913*^9, 
   3.828406497866577*^9}, 3.828406643274856*^9, 3.828406695348961*^9},
 CellLabel->"Out[146]=",
 CellID->455216710,ExpressionUUID->"a6b8fd04-dc88-4096-ace3-81b9069afb91"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       SubscriptBox[
        TemplateBox[{"\[CapitalGamma]"},
         "RowDefault"], 
        TemplateBox[{"\"-\""},
         "RowDefault"]]}], "-", 
      SubscriptBox[
       TemplateBox[{"\[CapitalGamma]"},
        "RowDefault"], 
       TemplateBox[{"\"+\""},
        "RowDefault"]]}], ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[ImaginaryI]", " ", "\[CapitalDelta]"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", "\[CapitalOmega]"}], "-", 
      FractionBox[
       SubscriptBox[
        TemplateBox[{"\[CapitalGamma]"},
         "RowDefault"], 
        TemplateBox[{"\"-\""},
         "RowDefault"]], "2"], "-", 
      FractionBox[
       SubscriptBox[
        TemplateBox[{"\[CapitalGamma]"},
         "RowDefault"], 
        TemplateBox[{"\"+\""},
         "RowDefault"]], "2"]}], ",", 
     RowBox[{"\[CapitalOmega]", "-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        SubscriptBox[
         TemplateBox[{"\[CapitalGamma]"},
          "RowDefault"], 
         TemplateBox[{"\"-\""},
          "RowDefault"]]}], "2"], "-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        SubscriptBox[
         TemplateBox[{"\[CapitalGamma]"},
          "RowDefault"], 
         TemplateBox[{"\"+\""},
          "RowDefault"]]}], "2"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "\[ImaginaryI]"}], " ", "\[CapitalDelta]"}], ",", 
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", "\[CapitalOmega]"}], "-", 
      FractionBox[
       SubscriptBox[
        TemplateBox[{"\[CapitalGamma]"},
         "RowDefault"], 
        TemplateBox[{"\"-\""},
         "RowDefault"]], "2"], "-", 
      FractionBox[
       SubscriptBox[
        TemplateBox[{"\[CapitalGamma]"},
         "RowDefault"], 
        TemplateBox[{"\"+\""},
         "RowDefault"]], "2"]}], ",", 
     RowBox[{
      RowBox[{"-", "\[CapitalOmega]"}], "-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        SubscriptBox[
         TemplateBox[{"\[CapitalGamma]"},
          "RowDefault"], 
         TemplateBox[{"\"-\""},
          "RowDefault"]]}], "2"], "-", 
      FractionBox[
       RowBox[{"\[ImaginaryI]", " ", 
        SubscriptBox[
         TemplateBox[{"\[CapitalGamma]"},
          "RowDefault"], 
         TemplateBox[{"\"+\""},
          "RowDefault"]]}], "2"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      SubscriptBox[
       TemplateBox[{"\[CapitalGamma]"},
        "RowDefault"], 
       TemplateBox[{"\"-\""},
        "RowDefault"]], "+", 
      SubscriptBox[
       TemplateBox[{"\[CapitalGamma]"},
        "RowDefault"], 
       TemplateBox[{"\"+\""},
        "RowDefault"]]}], ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.828406153964718*^9, 3.828406161814437*^9}, {
   3.828406225044614*^9, 3.828406226407605*^9}, {3.82840649450913*^9, 
   3.828406497866577*^9}, 3.828406643274856*^9, 3.8284066953778067`*^9},
 CellLabel->"Out[147]=",
 CellID->1490494356,ExpressionUUID->"417d1a14-164e-4d6d-98e4-8dd9503c4cd5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"matK", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"dv", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"dv", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "+", 
         RowBox[{"dv", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "/", "2"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"dv", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "-", 
          RowBox[{"dv", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ")"}]}], "/", "2"}]}], "}"}], "//",
     "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"matK", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.828406312272799*^9, 3.82840634133846*^9}, {
  3.8284065039825478`*^9, 3.828406508122246*^9}, {3.828406699732984*^9, 
  3.828406724256022*^9}},
 CellLabel->"In[156]:=",
 CellID->305576989,ExpressionUUID->"0e05b1ac-ce86-4528-8e9a-04e450487079"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", 
        SubscriptBox[
         TemplateBox[{"\[CapitalGamma]"},
          "RowDefault"], 
         TemplateBox[{"\"-\""},
          "RowDefault"]]}], "-", 
       SubscriptBox[
        TemplateBox[{"\[CapitalGamma]"},
         "RowDefault"], 
        TemplateBox[{"\"+\""},
         "RowDefault"]]}], "0", "0"},
     {"0", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          SubscriptBox[
           TemplateBox[{"\[CapitalGamma]"},
            "RowDefault"], 
           TemplateBox[{"\"-\""},
            "RowDefault"]]}], "-", 
         SubscriptBox[
          TemplateBox[{"\[CapitalGamma]"},
           "RowDefault"], 
          TemplateBox[{"\"+\""},
           "RowDefault"]]}], ")"}]}], 
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "2"]}], " ", "\[ImaginaryI]", " ", 
       RowBox[{"(", 
        RowBox[{
         SubscriptBox[
          TemplateBox[{"\[CapitalGamma]"},
           "RowDefault"], 
          TemplateBox[{"\"-\""},
           "RowDefault"]], "+", 
         SubscriptBox[
          TemplateBox[{"\[CapitalGamma]"},
           "RowDefault"], 
          TemplateBox[{"\"+\""},
           "RowDefault"]]}], ")"}]}]},
     {
      RowBox[{
       RowBox[{"-", "\[ImaginaryI]"}], " ", "\[CapitalDelta]"}], 
      RowBox[{"\[ImaginaryI]", " ", "\[CapitalOmega]"}], 
      RowBox[{"-", "\[CapitalOmega]"}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.828406335442137*^9, 3.828406342996399*^9}, {
  3.828406504760375*^9, 3.828406514662569*^9}, {3.828406644006853*^9, 
  3.828406655628285*^9}, {3.8284067070098877`*^9, 3.82840672918607*^9}},
 CellLabel->"Out[157]//MatrixForm=",
 CellID->184641738,ExpressionUUID->"a65ba251-efc6-47d2-bfba-651e6c541066"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"off", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"expr", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"expr", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "+", 
        RowBox[{"expr", "[", 
         RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "/", "2"}], ",", 
     RowBox[{"I", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"expr", "[", 
          RowBox[{"[", "2", "]"}], "]"}], "-", 
         RowBox[{"expr", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ")"}], "/", "2"}]}]}], "}"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"z", "\[Rule]", "0"}], ",", 
     RowBox[{"x", "\[Rule]", "0"}], ",", 
     RowBox[{"y", "\[Rule]", "0"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.828406736059311*^9, 3.828406784260653*^9}},
 CellLabel->"In[158]:=",
 CellID->1751122607,ExpressionUUID->"d25d1447-e8aa-41b8-875f-8c74ca41b203"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   SubscriptBox[
    TemplateBox[{"\[CapitalGamma]"},
     "RowDefault"], 
    TemplateBox[{"\"+\""},
     "RowDefault"]], ",", "0", ",", 
   FractionBox["\[CapitalDelta]", "2"]}], "}"}]], "Output",
 CellChangeTimes->{3.828406784581169*^9},
 CellLabel->"Out[158]=",
 CellID->978806722,ExpressionUUID->"ea624ce9-ad24-4df6-8cc3-ab117fd738f8"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Let us consider a single qubit, and examine a master equation. We assume \
that the system is initially prepared in a pure state ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      TemplateBox[{"0"},
       "Ket"], "+", 
      TemplateBox[{"1"},
       "Ket"]}], ")"}], "/", 
    SqrtBox["2"]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "01142ee1-72aa-4441-9e73-f8507b6f5392"],
 "."
}], "MathCaption",
 CellChangeTimes->{{3.828412952558769*^9, 3.8284130262754793`*^9}, {
  3.828413070463332*^9, 3.82841314104184*^9}},
 CellID->1536645940,ExpressionUUID->"4e37d66f-abd0-45e7-aec0-eb8a3f926325"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"init", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{"S", "[", "1", "]"}]}], ")"}], "/", "2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"init", "//", "MatrixForm"}]}], "Input",
 CellLabel->"In[6]:=",
 CellID->963207285,ExpressionUUID->"31dd93f0-4423-40d0-9870-ddc81c1af2aa"],

Cell[BoxData[
 TagBox[
  RowBox[{
   FractionBox["1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     TemplateBox[{
       TemplateBox[{"S"}, "RowDefault"], 
       TemplateBox[{"\"x\""}, "RowDefault"]},
      "Superscript"]}], ")"}]}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.8284129455560017`*^9, 3.828413044589876*^9, 3.828413151775206*^9, {
   3.828413844188015*^9, 3.828413864803735*^9}},
 CellLabel->"Out[7]//MatrixForm=",
 CellID->1136203733,ExpressionUUID->"aeea7016-cd08-4c9e-85e2-efdb7541a58b"]
}, Open  ]],

Cell["This is the effective Hamiltonian.", "Text",
 CellChangeTimes->{{3.8284131565550003`*^9, 3.8284131660493393`*^9}},
 CellID->983231550,ExpressionUUID->"aa529829-6ed4-46a0-98c0-3c4ae41fb547"],

Cell[BoxData[
 RowBox[{
  RowBox[{"opH", "=", 
   RowBox[{"S", "[", "3", "]"}]}], ";"}]], "Input",
 CellLabel->"In[8]:=",
 CellID->1701417680,ExpressionUUID->"e5c1a6d6-fe4e-47d2-a7aa-aaa6494a119e"],

Cell["These are the Lindblad operators.", "Text",
 CellChangeTimes->{{3.8284131714265327`*^9, 3.828413182361148*^9}},
 CellID->1866066132,ExpressionUUID->"e8596d6a-f092-4b10-9c7b-d0d70a206baa"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Let", "[", 
  RowBox[{"Real", ",", "\[CapitalGamma]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"opL", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}], "]"}], " ", 
     RowBox[{"S", "[", "4", "]"}]}], ",", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}], "]"}], 
     RowBox[{"S", "[", "5", "]"}]}]}], "}"}]}]}], "Input",
 CellLabel->"In[9]:=",
 CellID->682224499,ExpressionUUID->"6c07a83c-d1a4-44f5-b260-1ac6d961de73"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TemplateBox[{
      TemplateBox[{"S"}, "RowDefault"], 
      TemplateBox[{"\"+\""}, "RowDefault"]},
     "Superscript"], " ", 
    SqrtBox[
     SubscriptBox[
      TemplateBox[{"\[CapitalGamma]"},
       "RowDefault"], 
      TemplateBox[{"\"+\""},
       "RowDefault"]]]}], ",", 
   RowBox[{
    TemplateBox[{
      TemplateBox[{"S"}, "RowDefault"], 
      TemplateBox[{"\"-\""}, "RowDefault"]},
     "Superscript"], " ", 
    SqrtBox[
     SubscriptBox[
      TemplateBox[{"\[CapitalGamma]"},
       "RowDefault"], 
      TemplateBox[{"\"-\""},
       "RowDefault"]]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.828413184139349*^9, 3.82841319339819*^9}, 
   3.82841386743887*^9},
 CellLabel->"Out[10]=",
 CellID->1265326246,ExpressionUUID->"250e2bb3-4283-4e08-b9d7-65e6f49ae782"]
}, Open  ]],

Cell["\<\
This is the Lindblad basis we are going to use. It happens to be equivalent \
to the basis consisting of the Pauli operators.\
\>", "Text",
 CellChangeTimes->{{3.8284132510274277`*^9, 3.828413259261388*^9}, {
  3.8284140068679323`*^9, 3.828414027274313*^9}},
 CellID->2077920708,ExpressionUUID->"939a6586-69a2-4c4e-861f-48a60860c987"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"lbs", "=", 
  RowBox[{"LindbladBasis", "[", "S", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "/@", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Matrix", "[", 
      RowBox[{"#", ",", "S"}], "]"}], "&"}], ")"}], "/@", "lbs"}]}]}], "Input",\

 CellChangeTimes->{{3.828413261287739*^9, 3.828413272187373*^9}, {
  3.828413810476898*^9, 3.828413816641135*^9}, {3.828413873866763*^9, 
  3.828413893383911*^9}, {3.828413929067727*^9, 3.82841395158857*^9}},
 CellLabel->"In[45]:=",
 CellID->800188955,ExpressionUUID->"da83ac44-927d-430d-ab5d-e42677dc2de6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", 
    SqrtBox["2"]], ",", 
   FractionBox[
    TemplateBox[{
      TemplateBox[{"S"}, "RowDefault"], 
      TemplateBox[{"\"z\""}, "RowDefault"]},
     "Superscript"], 
    SqrtBox["2"]], ",", 
   FractionBox[
    TemplateBox[{
      TemplateBox[{"S"}, "RowDefault"], 
      TemplateBox[{"\"x\""}, "RowDefault"]},
     "Superscript"], 
    SqrtBox["2"]], ",", 
   FractionBox[
    TemplateBox[{
      TemplateBox[{"S"}, "RowDefault"], 
      TemplateBox[{"\"y\""}, "RowDefault"]},
     "Superscript"], 
    SqrtBox["2"]]}], "}"}]], "Output",
 CellChangeTimes->{{3.828413266194318*^9, 3.828413275104649*^9}, 
   3.828413820064472*^9, {3.8284138687586737`*^9, 3.828413893722735*^9}, {
   3.828413924840048*^9, 3.828413961733809*^9}, {3.828413994315531*^9, 
   3.8284140364073343`*^9}},
 CellLabel->"Out[45]=",
 CellID->86443218,ExpressionUUID->"6eb4edf4-5977-48bb-b2d6-0cc04f481cd4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["1", 
         SqrtBox["2"]], "0"},
       {"0", 
        FractionBox["1", 
         SqrtBox["2"]]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {2, 2}, 0, {
       1, {{0, 1, 2}, {{1}, {2}}}, {
        2^Rational[-1, 2], 2^Rational[-1, 2]}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {
        FractionBox["1", 
         SqrtBox["2"]], "0"},
       {"0", 
        RowBox[{"-", 
         FractionBox["1", 
          SqrtBox["2"]]}]}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {2, 2}, 0, {
       1, {{0, 1, 2}, {{1}, {2}}}, {
        2^Rational[-1, 2], -2^Rational[-1, 2]}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", 
        FractionBox["1", 
         SqrtBox["2"]]},
       {
        FractionBox["1", 
         SqrtBox["2"]], "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {2, 2}, 0, {
       1, {{0, 1, 2}, {{2}, {1}}}, {
        2^Rational[-1, 2], 2^Rational[-1, 2]}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", 
        RowBox[{"-", 
         FractionBox["\[ImaginaryI]", 
          SqrtBox["2"]]}]},
       {
        FractionBox["\[ImaginaryI]", 
         SqrtBox["2"]], "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {2, 2}, 0, {
       1, {{0, 1, 2}, {{2}, {1}}}, {
        Complex[0, -1] 2^Rational[-1, 2], Complex[0, 1] 
         2^Rational[-1, 2]}}]]]]}], "}"}]], "Output",
 CellChangeTimes->{{3.828413266194318*^9, 3.828413275104649*^9}, 
   3.828413820064472*^9, {3.8284138687586737`*^9, 3.828413893722735*^9}, {
   3.828413924840048*^9, 3.828413961733809*^9}, {3.828413994315531*^9, 
   3.828414036409873*^9}},
 CellLabel->"Out[46]=",
 CellID->1152219554,ExpressionUUID->"1eb86c98-c28b-4a1b-bb0b-5a678a83358a"]
}, Open  ]],

Cell["\<\
Here are the generator matrix K and the inhomogeneous term when the Lindblad \
equation is written in the standard form of an inhomogeneous first-order \
differential equation.\
\>", "Text",
 CellChangeTimes->{{3.828414080911639*^9, 3.828414180749586*^9}},
 CellID->1724544649,ExpressionUUID->"d0060464-9014-4d6b-95cf-68a72293762a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"mat", ",", "vec"}], "}"}], "=", 
   RowBox[{"LindbladConvert", "[", 
    RowBox[{"opH", ",", "opL"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"mat", "//", "MatrixForm"}], "\[IndentingNewLine]", 
 RowBox[{"vec", "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.828414048521559*^9, 3.828414074735592*^9}},
 CellLabel->"In[64]:=",
 CellID->729258573,ExpressionUUID->"52edc1ef-bb70-484e-b60e-56b4eb454d66"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {
      RowBox[{
       RowBox[{"-", 
        SubscriptBox[
         TemplateBox[{"\[CapitalGamma]"},
          "RowDefault"], 
         TemplateBox[{"\"-\""},
          "RowDefault"]]}], "-", 
       SubscriptBox[
        TemplateBox[{"\[CapitalGamma]"},
         "RowDefault"], 
        TemplateBox[{"\"+\""},
         "RowDefault"]]}], "0", "0"},
     {"0", 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "-", 
          FractionBox[
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"-\""},
             "RowDefault"]], "2"], "-", 
          FractionBox[
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"+\""},
             "RowDefault"]], "2"]}], ")"}]}], "+", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "\[ImaginaryI]"}], "-", 
          FractionBox[
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"-\""},
             "RowDefault"]], "2"], "-", 
          FractionBox[
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"+\""},
             "RowDefault"]], "2"]}], ")"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         FractionBox["1", "2"]}], " ", "\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "-", 
          FractionBox[
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"-\""},
             "RowDefault"]], "2"], "-", 
          FractionBox[
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"+\""},
             "RowDefault"]], "2"]}], ")"}]}], "+", 
       RowBox[{
        FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "\[ImaginaryI]"}], "-", 
          FractionBox[
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"-\""},
             "RowDefault"]], "2"], "-", 
          FractionBox[
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"+\""},
             "RowDefault"]], "2"]}], ")"}]}]}]},
     {"0", 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "-", 
          FractionBox[
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"-\""},
             "RowDefault"]], "2"], "-", 
          FractionBox[
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"+\""},
             "RowDefault"]], "2"]}], ")"}]}], "-", 
       RowBox[{
        FractionBox["1", "2"], " ", "\[ImaginaryI]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "\[ImaginaryI]"}], "-", 
          FractionBox[
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"-\""},
             "RowDefault"]], "2"], "-", 
          FractionBox[
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"+\""},
             "RowDefault"]], "2"]}], ")"}]}]}], 
      RowBox[{
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "-", 
          FractionBox[
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"-\""},
             "RowDefault"]], "2"], "-", 
          FractionBox[
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"+\""},
             "RowDefault"]], "2"]}], ")"}]}], "+", 
       RowBox[{
        FractionBox["1", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "\[ImaginaryI]"}], "-", 
          FractionBox[
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"-\""},
             "RowDefault"]], "2"], "-", 
          FractionBox[
           SubscriptBox[
            TemplateBox[{"\[CapitalGamma]"},
             "RowDefault"], 
            TemplateBox[{"\"+\""},
             "RowDefault"]], "2"]}], ")"}]}]}]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {3, 3}, 0, {
     1, {{0, 1, 3, 5}, {{1}, {2}, {3}, {2}, {
       3}}}, {-$CellContext`\[CapitalGamma][
         "-"] - $CellContext`\[CapitalGamma]["+"], 
       Rational[1, 2] (Complex[0, -2] + 
         Rational[-1, 2] $CellContext`\[CapitalGamma]["-"] + 
         Rational[-1, 2] $CellContext`\[CapitalGamma]["+"]) + 
       Rational[1, 2] (Complex[0, 2] + 
         Rational[-1, 2] $CellContext`\[CapitalGamma]["-"] + 
         Rational[-1, 2] $CellContext`\[CapitalGamma]["+"]), 
       Complex[0, Rational[-1, 2]] (Complex[0, -2] + 
         Rational[-1, 2] $CellContext`\[CapitalGamma]["-"] + 
         Rational[-1, 2] $CellContext`\[CapitalGamma]["+"]) + 
       Complex[0, Rational[1, 2]] (Complex[0, 2] + 
         Rational[-1, 2] $CellContext`\[CapitalGamma]["-"] + 
         Rational[-1, 2] $CellContext`\[CapitalGamma]["+"]), 
       Complex[0, Rational[1, 2]] (Complex[0, -2] + 
         Rational[-1, 2] $CellContext`\[CapitalGamma]["-"] + 
         Rational[-1, 2] $CellContext`\[CapitalGamma]["+"]) + 
       Complex[0, Rational[-1, 2]] (Complex[0, 2] + 
         Rational[-1, 2] $CellContext`\[CapitalGamma]["-"] + 
         Rational[-1, 2] $CellContext`\[CapitalGamma]["+"]), 
       Rational[1, 2] (Complex[0, -2] + 
         Rational[-1, 2] $CellContext`\[CapitalGamma]["-"] + 
         Rational[-1, 2] $CellContext`\[CapitalGamma]["+"]) + 
       Rational[1, 2] (Complex[0, 2] + 
         Rational[-1, 2] $CellContext`\[CapitalGamma]["-"] + 
         Rational[-1, 2] $CellContext`\[CapitalGamma]["+"])}}]]]]], "Output",
 CellChangeTimes->{{3.828414070161618*^9, 3.8284140771140757`*^9}, {
  3.828414108105176*^9, 3.828414112041397*^9}, {3.82841416334942*^9, 
  3.828414183267199*^9}},
 CellLabel->"Out[65]//MatrixForm=",
 CellID->1970112830,ExpressionUUID->"548c8487-bb26-421c-a50f-e1d9d8b011c3"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       FractionBox[
        RowBox[{
         RowBox[{"-", 
          SubscriptBox[
           TemplateBox[{"\[CapitalGamma]"},
            "RowDefault"], 
           TemplateBox[{"\"-\""},
            "RowDefault"]]}], "+", 
         SubscriptBox[
          TemplateBox[{"\[CapitalGamma]"},
           "RowDefault"], 
          TemplateBox[{"\"+\""},
           "RowDefault"]]}], 
        SqrtBox["2"]]},
      {"0"},
      {"0"}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Column], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
    SparseArray[
    Automatic, {3}, 0, {
     1, {{0, 1}, {{1}}}, {
      2^Rational[-1, 2] (-$CellContext`\[CapitalGamma][
          "-"] + $CellContext`\[CapitalGamma]["+"])}}]]]]], "Output",
 CellChangeTimes->{{3.828414070161618*^9, 3.8284140771140757`*^9}, {
  3.828414108105176*^9, 3.828414112041397*^9}, {3.82841416334942*^9, 
  3.8284141832703047`*^9}},
 CellLabel->"Out[66]//MatrixForm=",
 CellID->1783464364,ExpressionUUID->"93e6c684-211a-44e0-a8bb-b3bba1ccfb4f"]
}, Open  ]],

Cell["\<\
This solves the differential equation based on the generator matrix K and the \
inhomogeneous term.\
\>", "Text",
 CellChangeTimes->{{3.828414245917001*^9, 3.828414270621249*^9}},
 CellID->122769520,ExpressionUUID->"4ccf2410-cf38-4faa-b3d4-f0092c75d7f0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Rho]", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Rho]", "[", "t_", "]"}], "=", 
   RowBox[{"Block", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[CapitalGamma]", ",", "\[Rho]"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"\[CapitalGamma]", "[", "\"\<+\>\"", "]"}], "=", ".3"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[CapitalGamma]", "[", "\"\<-\>\"", "]"}], "=", ".7"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"LindbladSolve", "[", 
        RowBox[{"opH", ",", "opL", ",", "init", ",", "t"}], "]"}], "//", 
       "Chop"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Rho]", "[", "t", "]"}], "//", "MatrixForm"}]}], "Input",
 CellChangeTimes->{{3.82841419918841*^9, 3.8284142108986683`*^9}},
 CellLabel->"In[87]:=",
 CellID->719143774,ExpressionUUID->"3283de1b-f193-4fc8-ab88-340062faa246"],

Cell[BoxData[
 TagBox[
  RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
   RowBox[{"0.4999999999999999`", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"1.9999999999999996`", " ", "t"}], "]"}], " ", 
    TemplateBox[{
      TemplateBox[{"S"}, "RowDefault"], 
      TemplateBox[{"\"x\""}, "RowDefault"]},
     "Superscript"]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "0.20000000000000007`"}], "+", 
      RowBox[{"0.20000000000000007`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "0.9999999999999998`"}], " ", "t"}]]}]}], ")"}], " ", 
    TemplateBox[{
      TemplateBox[{"S"}, "RowDefault"], 
      TemplateBox[{"\"z\""}, "RowDefault"]},
     "Superscript"]}], "+", 
   RowBox[{"0.4999999999999999`", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
    TemplateBox[{
      TemplateBox[{"S"}, "RowDefault"], 
      TemplateBox[{"\"y\""}, "RowDefault"]},
     "Superscript"], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}]}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.8284140322028627`*^9, {3.828414195499177*^9, 3.828414216843111*^9}, 
   3.828414271875833*^9},
 CellLabel->"Out[89]//MatrixForm=",
 CellID->855271031,ExpressionUUID->"fb2e3ec8-58c0-4282-b3b2-602a30f14426"]
}, Open  ]],

Cell["\<\
To investigate the physical properties of the solution, we calculate the \
expectation values of the Pauli operators.\
\>", "Text",
 CellChangeTimes->{{3.8284143079303617`*^9, 3.828414356426446*^9}},
 CellID->2125434902,ExpressionUUID->"afab8994-6761-42ac-9bd6-2ebaf8ac526e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"avgX", "[", "t_", "]"}], ",", 
    RowBox[{"avgY", "[", "t_", "]"}], ",", 
    RowBox[{"avgZ", "[", "t_", "]"}]}], "}"}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{"\[Rho]", "[", "t", "]"}], ",", "#"}], "]"}], "&"}], "/@", 
   RowBox[{"S", "@", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]}]}]], "Input",
 CellLabel->"In[91]:=",
 CellID->1210483635,ExpressionUUID->"3349b63c-cbe3-40ec-a42d-5977d5b8b87e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"0.4999999999999999`", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
    RowBox[{"Cos", "[", 
     RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}], ",", 
   RowBox[{"0.4999999999999999`", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "0.4999999999999999`"}], " ", "t"}]], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"1.9999999999999996`", " ", "t"}], "]"}]}], ",", 
   RowBox[{
    RowBox[{"-", "0.20000000000000007`"}], "+", 
    RowBox[{"0.20000000000000007`", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "0.9999999999999998`"}], " ", "t"}]]}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.82841421889214*^9, {3.82841427443633*^9, 3.828414297649837*^9}},
 CellLabel->"Out[91]=",
 CellID->384148147,ExpressionUUID->"1f785014-b353-471e-8ad0-efd8dc47adc0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgX", "[", "t", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgY", "[", "t", "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"t", ",", 
          RowBox[{"avgZ", "[", "t", "]"}]}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "10", ",", "0.1"}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListLinePlot", "[", 
  RowBox[{"data", ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(B\), \(z\)]\) t\>\"", ",", 
      "\"\<\[LeftAngleBracket]X\[RightAngleBracket], \[LeftAngleBracket]Y\
\[RightAngleBracket], \[LeftAngleBracket]Z\[RightAngleBracket]\>\""}], 
     "}"}]}]}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellLabel->"In[92]:=",
 CellID->1754552550,ExpressionUUID->"ba66a32f-e884-4ea2-ae86-0d64ae54ecff"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJw11AlQ1FUcwHHuW24RlwX2IDVCQikGIns/IkBCDkkUEQuTw5AjFrBYQA6X
EojL3QUSK1eRc0JAEITclWF1g8AyRI44wwEpQGgTWSKtdX/+Zv6zs7Pvfd7M
9/1n6R/HB0aoKCkpRfz/yD9fzrPn8pkk57+Wzw1SuLKiZzM4jt97SIrYLWJf
/Sh5w1E+A2Th5zndsM4H+PsIicsIixiCX4lCmyLcUKajw1Ivrp8hvGYB1ca+
i0RFymeWeIbbemTUNuD+eXJvNjBVqsMR9ffJZ4Hw243iLPObRQpvmczFctqj
t98SKdavkP05+kXSjtsihS8lAtvbywmzPbj/bxJ13ULAFPSJFOetkjojq2tr
K/3orZGQK7Li/sV+9GTE5f0TJdDah94/pEfwVNmd1YveBvn8O7pXTpAEvWdk
9YPTO8e43egpwXS1x1SyRIjrlaCwqFCr5Ukr+sqwJBWfZTvU4X4VGEwd1eTZ
n8PzVIEVvI9btpGH/dSAosZX33a3kig8NQicoDkoBzdiL3UoEN0J4hm0Yk8N
8KoQ10jZ7dhbE+yaBeNJpR3oaYFdWbJ1QEwnelowzXQKe2jciZ42NFj+cqam
7gZ6OmBX/yRv9kgberqgtXjV++iBFvT0YFfZPGdG3IieHly2/S3aW1iL3iZY
pLhcNa8WoKcPbYZJnt17uOgZwEmd9KDDCfHoGcJxt4EN6asc7GMIR6l2h4Uh
pdjTEIr1+WaJXhdFL7Y7GoHzlfXFvXsqsa8RrPblHruvXI33YQzeb6a08Pg1
6BnDmkaFwEO9Fj1jUGnMeLjrRA32N4GhIWmT20QVeiagnWNcPVlQiZ4pPLL+
ZKxfIEDPFL6NTZGpF15AzxTqbBJ9vYP46G0Gl3fWG8VT+ehthhx1maaLiI2e
GQRuT/vwWh4D+5hB9OSpW7v3pmBPM7gbnGnS5vcl9toCbP/8m1kqxdh3Cxjx
29JC/bjYzxzuW5QPd2Tz0TOHwT8/nT91uRQ9cyiO9v9+h6gUva0wKimQ5C7y
0dsK777d63HJl4ceBR47vcJ+oHoOPQr0vX5nYiS+ED0KZBfxnd23nUXPAsqF
JZNNaVnoWcCqTKihnZ2MHhUkvb9nNcyHoUcFa8rxTGaBL/ajAj2XzGmYxmI/
S/ih3tR9p/gz7GcJ1D/eUw/ZkYH9rGB/2sBwpk823ocV6O0e9J9Xffn/YQUB
gkNLj7o56FlDuNgsM7KCg541KHe95Wpz6Qx6NNgkC3bWXc3C94sG7vx2WRcr
A30alJz+1/8pnY37aeA3DUP6Hkl4Hg14icNq131i0KPD9KGfLlSbhKFHBxp1
uPdiuht6dLA/Nm3uw/XGXnQI93T9qrzrI+xLB7ZlaN7cvSjsx4DljI7UH3Xj
iMJjQFD8+jfPXROwJwN8hdGSmDwWegxwMUjPvSljoceAhRGLnsbzLPSYcHCj
qkDIScD7YwKXqWenVhuPHhPC/2qivHbgJHpMKC2KPzLjF4keE/iPxxK6x8PQ
s4GAKp5T1BcHyX+RnsEw
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxd0ntMU1ccwPFOEXCA5dVayqu3pS4zUwYoiEDPDwkDAeMAAZG3ExGIrCKM
FdxAmTxD3SaPIUQLG6AytEKcgEBlwBAGKy8bkYcMZgOBZYDKeAU31p//7Jfc
NDf3nM+5+d5SJz/1idxCo9Ei/702f/8/14o3p4GwJ6eYaR/WE9V9F4mmS9/X
z/uF7LPZnEEyZDodksqW4/NhIhUfO+f/6wBRKRNk+0O/xczlIVw/RQaez7UF
sBQk6vTmKIlYTLHkBxS4f4aoLdSWzgqfkN6ezZkjjW+SzZ+OD6I3T1xsj36p
XtmP6xeIuMuj+9KzXvRfEvmx39gFDZ24/xUJs7URWtq34nlLJKJ5KG/J4z56
y2S/5uWEKt0y9FaIq0VY2OBIjkzlrZH0Jn/R6utqmcpbJ7srCiqSNB7IVN4G
GT1irZw+3CLDbCATFbxI62/F9TQIXMsWGFxuk6n8d+Cq8SO+3LUd928ButeS
vjavHc/bCkeFyQqFTRt6anBtlE1zL3jrqQHntl1PVn8LettgV9nZwaQfGtBT
Bztm7hcLc3XoacDNunkfR2U1epqw1CQ53z97Az1NGLNRt99Bv4TedrCgN2Ql
s7Kw17vglaRR41B+HftqgZ7j90G1xlXYTxs+Gj6+vONgDfbWhiChjmymW4o9
dcAk4eMnCcxa9HbAn9se7Vdk1qJHB7fp9jmBZS16ulASL/UV8e7hel342zP2
RCPtLvq6YCT1LI3pvk3+226jB/Hf6H/urazA8/Rgfc6yMq5Igp4+jKdL+kKd
CtHThwdFppXakxno6cOPB7x6PwjyxfcxgDJbM9k9qzTsYQCPI5m7OFZfYz9D
0Aro6+SPFWJvQ/BbuTLcvFqCPQ2hyScqQyvlBvZngHz1FK1cKkGPAXHh3t/F
TEjQY4JAaqeZHSJBjwlc97jQrAvX0WOCc0JrOO9gCXo7wVlvgxLsLUJvJzzn
2c23F3yLHgtmBZ9kqwXloscC68dVxSFhF9FjgexhcF2jOA49I2hjxP7kUOKG
/YzgKS/3lsT3PPZjQyg1Wd96Jw37seEln7+QH/y2HxtEZsrqwOIc7GcMTZ7+
zKTgPPSM4QzlwgitEaNnAod223ffLxOjZwInSwWvqaA89EzgYrb1RJtaLnqm
0HVCZFXYl4meKUSEjZ39+VU6emYwfLgqm+WTip4ZiANKoxXun6FnBv32L9JL
YmPQM4eUM+Ire8e90TMHz0jH01EbXtiPA1bVzBm34kiZ6v/FASqx6KrLiBB7
cqDyyJv8mJuJ2J8Dv1sYuL5HibAvB7xj6Tk6h1LQo4DzVw59gnEBPQry4FlL
Z10KehSIUoObbJ2S0aOg3C+uNX8kCT0KYg2EGgPNCehxoazDzm6dcQ49LnD4
iU6je2LQ44Lyq6aN0D8i0ONC/fyiIPC4L3pccJLKrfsy9qDHg5V4j5B6gSv2
4YHz4tYod34A9uRBv0NPx62OcOzFA+W+u8K1nlPYlwdFd/RAXBKF38MCInSm
Si2to8k/Lzqwgw==
      "]]}, 
    {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
      NCache[
       Rational[1, 90], 0.011111111111111112`]], AbsoluteThickness[1.6], 
     LineBox[CompressedData["
1:eJxd0nlQlHUYB/AVATEQuV3uPbCLozhMDer3KDRAHIJkMHJEyGHDKKGhZIEQ
lQuIy7Gwu2qDODLVhhGKIklssAt7sFCAR41GwM5QoASMDC7irkn+nv2j78w7
7/zmfb6f5513XnZG3u4sEwaDkfX0Wr3/P6fFq+kkSffGqnYW1UmfnVUkov7e
7j/456VBgasZJYsk+VhUhYQ+/51ca3NM8Zv4QfpMGSc/3b1sFrG5nc5rSX3a
kdlfnTukOdmrmSJr5mJzk/s7aX+aCMoM7/f4d0kHNau5T+Ks+zVbMrqpN08+
H/0xTuL3M51fIDcW+4RMhx7qPyAFujPVbdoe2l8kOc0Kz/LGXrpviWQOWJ8s
iZRRT0f8TlTsitLKqLdM1O/mHD58UE69FRLUdrQ09b6ceo+JXH3ZMTqtj3oG
ol83wNzX10c9BlhNWbVIOP10ngFq4eYh26P91F8DLsEfST+U9dO+CeyscPWp
tFDQfWvB4lwS2y5cQT1TMMR4jTYfV1DPFObDv33t9iUF9czgukZS8NKEgnrm
MJde96a9pZJ66yC5ibf45FUl9SxgOZTfG5egpJ4FCLaXCFIPKam3HiwHo3UF
p5TUew5ap0emJ75GzxKK+qIqJ7vRs4JzH/tqLo2iZwViV28Gbwq9DRC0/VZO
7UP0rIEoSYveXEW9jTDz9s3YBQcV9WxAKxdZ17BVdN4Gtty+Gqr3UVHfBmYl
WQEJW1XS/+qBtqDTj++5CCq6zxbc8kMvcCPRswP+7MzAQBx6dnD6gFluZyJ6
dvDPJzd2GFLxfezhrv+L6ZJ96NnDe8Ffxmr2o+cATvHZgfkH0HOA7/naxQv5
6DnA0pNtiYcK0HOEB7mJTG0heo7wht8dC8an6DlB2FwTZ7gYPSfQ+77+VWop
ek6gm0tntJShtwk8l7uCer9AbxPEfWBS13wCPSZ0lzcv7C1Hjwnjk6RtqgI9
JmhTFIrok+g5w8jz7erqKvSc4UzmK7orp9BzgdaXM4iUj54LzNs8Cm+tRs8F
RhqXCnk16LkC32zYEF2LnivwftswbKhFzw3GvcM7GuvQcwPxn9dj/AXouYH9
nbz1VwTouQNL/lewTz167hAhK3cS1aPnAbrH311crkfPA1IESSvxDeh5wN8x
QxNNDeh5gnmw3HemAT1PWA4+IvIWoscCg/C4KluI/xcLCnJ5SWeF6LOgcJt6
SCPEPgvSivK+0QlxHwv0N4f3sETosUF6SxwSJkKPDZ5lsmuZIvTYMPio3P0z
EXps2N8ZcvWsCD02OFcyFO1GjwPFXsVVaqPHgQD3kh1jRo8DHROljvNGjwMM
S/+tDDF6HFibM/mLtRg9LviMrZi6ifH7cEEX9o7uBTF6XEjYWKEMEKPHhS5Z
fE2I0eNC5MOu3LeMnhfs5R07GPP0/C/GzfNf
      "]]}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  AxesStyle->Automatic,
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
     "\"\[LeftAngleBracket]X\[RightAngleBracket], \[LeftAngleBracket]Y\
\[RightAngleBracket], \[LeftAngleBracket]Z\[RightAngleBracket]\"", 
      TraditionalForm], None}, {
     FormBox[
     "\"\\!\\(\\*SubscriptBox[\\(B\\), \\(z\\)]\\) t\"", TraditionalForm], 
     None}},
  FrameStyle->Automatic,
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{Automatic, Automatic},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10.}, {-0.23394688363999921`, 0.4999999999999999}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.025], 
     Scaled[0.025]}, {
     Scaled[0.025], 
     Scaled[0.025]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.828414226954782*^9, 3.828414298551385*^9},
 CellLabel->"Out[93]=",
 CellID->73430801,ExpressionUUID->"48187693-6f7a-4f3a-90ea-cca92ac9eb75"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Consider a three-level atom with the \[CapitalLambda]-type level \
structure.", "MathCaption",
 CellID->210970783,ExpressionUUID->"2e9a2b1a-adb3-4005-b396-f1ef1086cb3b"],

Cell[BoxData[
 RowBox[{"Let", "[", 
  RowBox[{"Qudit", ",", "A"}], "]"}]], "Input",
 CellLabel->"In[94]:=",
 CellID->290448684,ExpressionUUID->"12f3bbd3-901a-48d9-98e9-747cdfb6ed84"],

Cell["\<\
In the interaction picture, the Hamiltonian looks like this. We have put the \
two Rabi transition amplitudes to 1.\
\>", "Text",
 CellID->340702357,ExpressionUUID->"20d6a141-a966-4bf0-8dbd-9ed2fdc7413d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"opH", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", "10"}], ")"}], 
     RowBox[{"A", "[", 
      RowBox[{"1", "\[Rule]", "1"}], "]"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", "/", "10"}], ")"}], 
     RowBox[{"A", "[", 
      RowBox[{"2", "\[Rule]", "2"}], "]"}]}], "+", 
    RowBox[{"A", "[", 
     RowBox[{"2", "\[Rule]", "0"}], "]"}], "+", 
    RowBox[{"A", "[", 
     RowBox[{"0", "\[Rule]", "2"}], "]"}], "+", 
    RowBox[{"A", "[", 
     RowBox[{"2", "\[Rule]", "1"}], "]"}], "+", 
    RowBox[{"A", "[", 
     RowBox[{"1", "\[Rule]", "2"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"matH", "=", 
   RowBox[{"Matrix", "[", "opH", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"matH", "//", "MatrixForm"}]}], "Input",
 CellLabel->"In[95]:=",
 CellID->993111197,ExpressionUUID->"103b8eed-e401-4381-981d-c5eb7caa3bda"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", "0", "1"},
     {"0", 
      FractionBox["1", "10"], "1"},
     {"1", "1", 
      FractionBox["1", "5"]}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {3, 3}, 0, {
     1, {{0, 1, 3, 6}, {{3}, {2}, {3}, {1}, {2}, {3}}}, {
      1, Rational[1, 10], 1, 1, 1, Rational[1, 5]}}]]]]], "Output",
 CellChangeTimes->{3.828414468128399*^9},
 CellLabel->"Out[97]//MatrixForm=",
 CellID->710004947,ExpressionUUID->"f876cfc5-ad5a-4416-8cb2-4f5975230c11"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Let", "[", 
  RowBox[{"Real", ",", "\[CapitalGamma]"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"opL", "=", 
  RowBox[{"{", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", 
       RowBox[{"0", ",", "\"\<-\>\""}], "]"}], "]"}], "*", 
     RowBox[{"A", "[", 
      RowBox[{"2", "\[Rule]", "0"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", 
       RowBox[{"0", ",", "\"\<+\>\""}], "]"}], "]"}], "*", 
     RowBox[{"A", "[", 
      RowBox[{"0", "\[Rule]", "2"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", 
       RowBox[{"1", ",", "\"\<-\>\""}], "]"}], "]"}], "*", 
     RowBox[{"A", "[", 
      RowBox[{"2", "\[Rule]", "1"}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"\[CapitalGamma]", "[", 
       RowBox[{"1", ",", "\"\<+\>\""}], "]"}], "]"}], "*", 
     RowBox[{"A", "[", 
      RowBox[{"1", "\[Rule]", "2"}], "]"}]}]}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"matL", "=", 
   RowBox[{"Matrix", "[", "opL", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "/@", "matL"}]}], "Input",
 CellLabel->"In[102]:=",
 CellID->501635503,ExpressionUUID->"c0ef512d-bfe3-4b2d-9e7a-1e97d979e0ec"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    TagBox[
     RowBox[{"(", 
      RowBox[{
       TemplateBox[{"0"},
        "Ket"], 
       TemplateBox[{"2"},
        "Bra"]}], ")"}],
     DisplayForm], " ", 
    SqrtBox[
     SubscriptBox[
      TemplateBox[{"\[CapitalGamma]"},
       "RowDefault"], 
      TemplateBox[{"0", "\",\"", "\"-\""},
       "RowDefault"]]]}], ",", 
   RowBox[{
    TagBox[
     RowBox[{"(", 
      RowBox[{
       TemplateBox[{"2"},
        "Ket"], 
       TemplateBox[{"0"},
        "Bra"]}], ")"}],
     DisplayForm], " ", 
    SqrtBox[
     SubscriptBox[
      TemplateBox[{"\[CapitalGamma]"},
       "RowDefault"], 
      TemplateBox[{"0", "\",\"", "\"+\""},
       "RowDefault"]]]}], ",", 
   RowBox[{
    TagBox[
     RowBox[{"(", 
      RowBox[{
       TemplateBox[{"1"},
        "Ket"], 
       TemplateBox[{"2"},
        "Bra"]}], ")"}],
     DisplayForm], " ", 
    SqrtBox[
     SubscriptBox[
      TemplateBox[{"\[CapitalGamma]"},
       "RowDefault"], 
      TemplateBox[{"1", "\",\"", "\"-\""},
       "RowDefault"]]]}], ",", 
   RowBox[{
    TagBox[
     RowBox[{"(", 
      RowBox[{
       TemplateBox[{"2"},
        "Ket"], 
       TemplateBox[{"1"},
        "Bra"]}], ")"}],
     DisplayForm], " ", 
    SqrtBox[
     SubscriptBox[
      TemplateBox[{"\[CapitalGamma]"},
       "RowDefault"], 
      TemplateBox[{"1", "\",\"", "\"+\""},
       "RowDefault"]]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8284144689590483`*^9, 3.8284144790170107`*^9}},
 CellLabel->"Out[103]=",
 CellID->295088378,ExpressionUUID->"d9dd99d6-f2c6-44af-84b6-c8a24ac5534c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", 
        SqrtBox[
         SubscriptBox[
          TemplateBox[{"\[CapitalGamma]"},
           "RowDefault"], 
          TemplateBox[{"0", "\",\"", "\"-\""},
           "RowDefault"]]]},
       {"0", "0", "0"},
       {"0", "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {3, 3}, 0, {
       1, {{0, 1, 1, 1}, {{3}}}, {$CellContext`\[CapitalGamma][0, "-"]^
         Rational[1, 2]}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0"},
       {"0", "0", "0"},
       {
        SqrtBox[
         SubscriptBox[
          TemplateBox[{"\[CapitalGamma]"},
           "RowDefault"], 
          TemplateBox[{"0", "\",\"", "\"+\""},
           "RowDefault"]]], "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {3, 3}, 0, {
       1, {{0, 0, 0, 1}, {{1}}}, {$CellContext`\[CapitalGamma][0, "+"]^
         Rational[1, 2]}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0"},
       {"0", "0", 
        SqrtBox[
         SubscriptBox[
          TemplateBox[{"\[CapitalGamma]"},
           "RowDefault"], 
          TemplateBox[{"1", "\",\"", "\"-\""},
           "RowDefault"]]]},
       {"0", "0", "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {3, 3}, 0, {
       1, {{0, 0, 1, 1}, {{3}}}, {$CellContext`\[CapitalGamma][1, "-"]^
         Rational[1, 2]}}]]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0", "0", "0"},
       {"0", "0", "0"},
       {"0", 
        SqrtBox[
         SubscriptBox[
          TemplateBox[{"\[CapitalGamma]"},
           "RowDefault"], 
          TemplateBox[{"1", "\",\"", "\"+\""},
           "RowDefault"]]], "0"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[
     SparseArray[
      Automatic, {3, 3}, 0, {
       1, {{0, 0, 0, 1}, {{2}}}, {$CellContext`\[CapitalGamma][1, "+"]^
         Rational[1, 2]}}]]]]}], "}"}]], "Output",
 CellChangeTimes->{{3.8284144689590483`*^9, 3.8284144790210123`*^9}},
 CellLabel->"Out[105]=",
 CellID->1010628123,ExpressionUUID->"f38c3a29-300c-4896-b96f-6e409060c84e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Timing", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Rho]", "[", "t_", "]"}], "=", 
    RowBox[{"Block", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[CapitalGamma]", ",", "init"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"\[CapitalGamma]", "[", 
         RowBox[{"0", ",", "\"\<-\>\""}], "]"}], "=", "0.05"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[CapitalGamma]", "[", 
         RowBox[{"0", ",", "\"\<+\>\""}], "]"}], "=", "0.01"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[CapitalGamma]", "[", 
         RowBox[{"1", ",", "\"\<-\>\""}], "]"}], "=", "0.025"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"\[CapitalGamma]", "[", 
         RowBox[{"1", ",", "\"\<+\>\""}], "]"}], "=", "0.005"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"init", "=", 
        RowBox[{"DiagonalMatrix", "[", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "0"}], "}"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"LindbladSolve", "[", 
        RowBox[{"matH", ",", "matL", ",", "init", ",", "t"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellLabel->"In[108]:=",
 CellID->260219023,ExpressionUUID->"8b46c71b-3a39-429c-a697-c857534e33ff"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.99647`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.828414491245998*^9},
 CellLabel->"Out[108]=",
 CellID->972810776,ExpressionUUID->"883af5de-f659-493b-bf3c-f278dcc857ca"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "@", 
    RowBox[{"Diagonal", "@", 
     RowBox[{"\[Rho]", "[", 
      RowBox[{"t", " ", "Pi"}], "]"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", "10"}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\[CapitalOmega] t / \[Pi]\>\"", ",", "\"\<Probabilities\>\""}], 
     "}"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
   RowBox[{"PlotLegends", "\[Rule]", "Automatic"}]}], "]"}]], "Input",
 CellLabel->"In[109]:=",
 CellID->1542313529,ExpressionUUID->"2bf18ac1-8c7e-4730-9550-ea572345a8cb"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, 
        Annotation[#, "Charting`Private`Tag$11072#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
GA==
          "]]}, Annotation[#, "Charting`Private`Tag$11072#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
10wGctSOmUWVVYPToh6a/1MGhqrFqPLTakC7N+Ph+WYGXlufYtZ1tA6kNTwm
HwsZ2Cb/OLflbh18DtEw7m5nYFnFKfaNV3WQySkdVO1h4EzTnmdRhvUg59XB
aPjIwCX5o3tPkBpgrCzVe3yEgTeX1M282d4ATYudyylfGHhhMvVRfXADRDz9
4uj1nYEKmSOPvrxtgN/B4mZzxZj4VOOd7b6MRhjOcvNNncXEzm7Hx7daG6Gz
pT5FQ5yw80d6Jf8S+xwzbth2LhNf6b4w3GXTBIerqFH3JZlYVyQnd/l3E9h/
CXm0cTETd22svbeD1QzbSAMdrUuYGDCWfvT3tmZgezzkTMowUW46YOxXbDO8
WrSeZ0JmovTzcw1cot/WaKUM91KY+Dkj2k1RowUK9k0v8aEyUSNJco+KaQvE
PebvT2EwcVNGtsjybAuc7V4WtYrFxO6UKBPnxBY4Miv6EY/NRPGdq2fkHrWA
yS7L6ZFlTNyZEK1q3dkC64Ofcs4uZ+Ljuedetg+3gHKWvJmMGhM3n1qlNTzV
AjItAb73VjCxIolKvbygFcR+vU7RU2digtur/DKFVvjKAF7LKiYyzd1c/JVb
odfkzrDLaiZKaD/48mJ1KzT4zJH+tYaJb8L4e8M2tEJxqofOpbVMtG06OK91
cyvcEzTuZ2gR73UWT0gzaYVrnzWinmkz8Xj0ku+jO1ohTD7+kbEOEw+dkfTk
W7XC8U0/Ol7rMnG3dGaE/O5W2O9uP31Mj4k/Ze5xRgjbPK6UI6HPxORjUz4G
hK33gm6WbMBEtXlnR2SsW0H1/TlfdWCim8Mbq8MWrUBa9CGFi0zMl7DnGm5v
BQktE97uLUyMW+WWdHdLK4zvzRke3spEvbfHoy7otcLbyMXSZ4yYOHxuf/SP
Na3Qkuejs9SYicaHqcOfl7VCWVfH/iwTIh5chfU+5FbIFtON2mDKRJ3i+1aR
i1ohWe3Go2YzJubu9jyoPt0CE9+3ZYXvYGKHAz19fKQFLCvGb26wZGJO+LYZ
OSI+2RfSro3uJPiV23w/mdsCc3eZXs6yZuLlNXbs8Ict4EL7Gb5nNxNNHB3s
e+JaoGIoI2ipLROjmMuvZp5qgZPBU4fPODCRevv8dK5BCwi3Zbms28NEJ3fu
pSk6Me+XWjmO7GXi+e6Y9pczzTCY9WC7jRMTvz7yWLi/pBmsW+1UV7kzcQ33
ROwdIn/zUsSZAx5MNE1P/3JgsgkWHHqskHKYiZXaasyfzU3AnZw7b443E803
fVjQdbIJVrMLP/SeYKLYocp16S8aQfKk3N3LYUx8z/e9eFupgdBn3NQtEUxk
8TfMt/xQD4IFR+InI5m4w9f0RWJePQSmCc4dimbi0K494suxHkZqfZ3045jY
t+izRpVTHdRQ2mifbzFxcMpMq+1uDbA/BMvfSWfilEF0pNvRGjjzWFXKPoOo
hwZ3/hGdGtAyDJ0WZBL/l7a6ijVXw52jq1/fyGFiy8Nz1Nx/VTCj81pk9YiJ
bS+ZOpotVeAw+3zDvMdEvjLdj1++VQXSSf0v/J4ycZtR1t2JTVUQwo1JNntB
8Jnd+KoxhuiXfdxrUyVMHL9grzTbVQC2f77H3S8j6v/jHbO9BgJQX+8YLc5l
4u03xUvvfOND0q6YyCc8Aq/bzcb0Zj6xT3DPHRAQ5/sCij9k86E7RyWwtIaJ
MyUPD3p58mFrvcMpzzomJmq3zS415UPex8u+Cg1MHPVfluC7ig8UCa53dSMT
ReFTm1OW8iGS9f2wXzNxP6PkP+1fPBjbpOLOaiXywcGXYtnPg717HQ62Cpmo
ud9F4r8aHqxNqtyzsoOJRSpiuvybPLhVMG736iUT5+y5DPMvEvNMtGz3+S4m
LnlbGfQxgAcnRu13ar9iIs/O6qizJw/eSF42H+hhYpPFNr0zewj9sqLS5Gov
ET/R0kcGljwoNB43hH4mnt5au+6eIQ9Yrss2f3nDxKxw5zcvNvLgcpi9wY13
TAx6Sj8YpMWDX+mXNmwfYGLz+THZLxo8cCmv0P41yMSe47OGpVfyoKXnm2bW
RyZahlmcGlblwYZJZY1dw0S9Wtv+PEHYmfL2K2Z9YuLd6l4oUuOB9LpLKo//
I/rba0HDY3UeBO2sYO/7wkTDU1N5+zV58PHoN/qiUSaS1AIzBTo8sLqkrPRi
jIkrf3uI9wOhlx7YKbiPM1GWrF+Vu50HqjUXZeUnmOh5ciZEw4YHCQPlSwQ/
mGilfO+4swsPZsS+LfL5xcRlZ0J8tvrw4DBdeT5jiol/hLn/2s7x4OVGO4nm
30w8c7NEb+E1HqDDRbGgaSZ6LDH5MHyfBzmnyqdVZ4h6rxS4Hi7nAena2GTn
PyaecNSvvdjBgy8ttt/WirPwyuyv1xPn8cH+c/SXtxIsVPjTYh/A4UPVgvKR
2LksnHykkv0B+ZBqyHn/aQELy17mD5mF8mGOi21/8iIWJleXBOje4cPxkOie
bVIsVO95MJhUzQfjklHRHWkWyuIB+QRpAUysLhM4KrDw5qi5U2ahAA7sGK2c
T2ah6eGauF0DAmg4zC4rpLDwFK35nPbSKriddaFAhs7Ckw9vOx45XgU7lGyy
GpRZuEBvo1bCxmpIHtTg7lFh4XOW+NVVR6th8NH815+Xs1CJW7gjJr0agrFM
eslKFoa2bZkOmFsDua6c4F2aBB7DcJeZ1zWwMP+bda8BCw2yjScsbtWB7enG
o0eBhbfEmqabOuvgzpasCzPIQt3XN6+ekK6HDS/tK5iGLOQuuEFRiKgHj9+V
aq6mLKy84z583qsBag1jxb7aslCRu+P90rVNILPYQynEnoXXYiI0dns2wf6u
zeulHQm+A5PDqbeb4KfnD6+1+1jYV3zYSFGyGVSu7O06dZCFj+a8ac/vbQZf
+/Xj81xZyByfDlFYQvRnlrRUihsL35+zWPICW8CmQLCl1JOF/EHnwuiMFoh4
tSLv3zEW6twfG/OzbwXhHYn6OB8W1s3svyQIbwXqkf4Blh/xHgffmUV5rfBs
5irZ8BQLp9esbPD81woztV5aL/1ZGObi764rKwTTq0aWbqdZuDbruvgKFSG8
50xFXAhmYeLCentTUyFofBGlk8+ycMt2cqXvHiEEFuaWZIew8PrNitRpLyHI
bHcaawpjoeGXB9vVLglhv4zeov0RLOw28n9WkyKE7NeyKqORLPwjeZdbcl8I
m71r9yyNZiHddYHRLZ4QfnePbKu6SPDpNWwW2iKEgq2Sa/0vszBtKjL+ao8Q
juZp0FbEsrDI/ml+ywchqJCt5vddIeIpM+ilPSaEt+F+369cZWHP34dFAmKf
Tfl6vX9LAsGvhGyh/+w2sHYorv9xjYjnhUXFlgvbQLKqp+BBIvF9X76B6dI2
qNH4m74nmaiHrUk/XRXaICSFcWlxKgsft0vyM6htoCux5RTvBgs/9Rk/nma2
wbj3IecTtwj+aPF/Tyq3Qe6rKPPl6Sx8Y+lGlVreBq6GD3V6brMwJj08h6fa
BvTHjeyYO0S9uP4MTFBrg27yVynMZOHYJtKlMMKOj5CeGs9i4atzpyWvEOfN
RtcOZt1n4YWF/QdeqLSBhKNNq/1DFnqfnEeaTfirqPIvWZRD5H99/KgngSdg
dWpWRS5Rv2mVvd+U2kAztSzOJ4+Fr19p/E0lEfu/xJsg5XwWXvyTmO4m3QaZ
x2a5dz1hofgq7822C9pgfw/H+uIz4v4lF2O9ZrWBgtE2A4PnLCw4+tzpwaQQ
hI89VMcKiXod2Vi5eFQIFymXZO8WszC30qv/9qAQDCMfzdiUsFCuSorh/EoI
f0dbR+aXsfDls3Yp62YhHK+W43pXsnDGxFes7akQVqzRyWHxWJhwMun7oUwh
DKQ6JHbwWZj6Xc5X+7oQbI+nHdGrYeGK0uinKSeEIP2aa/elloWLZSvvax0U
Qr3RwJbb9SyUOUuPoVgJQV9JlTy3mYVv98ys6lohhJ+RphIvWlj47ZT0tkKS
EB6PHRn1ErJQmxY159ssIbBrnlS3tbNwtsfuXQqPWmG+z0bfWz0srArJtCj6
1gL81/v27exloQTP0VqP0FNB20JNxPtZmOksfloQ0wJflarpnu+IftQYnSKr
0gIdNRaNWsP/r4+Rx4PmzZBOdVFu+sHC4U470uUzjaC3bqWGyy8WbvjSKdFq
1Agd2yd0JidZaB9+Y3uvVCPM948yU55mYfVOctTZWw1wvC3bN3g2G63HJEZn
SusBo75z1Zew8dY2BZX6mVrouVnWwJdmo4zZ1LFjdbVw4llkh70MG2+/SFcO
ja+FB28VhiPk2bhBB+7MVa2FpRv1l/QpsXEWb9XZbIcaeD8asS9GlY1O4ezR
8f4qCJ5r4c5Zwcbg8/O3ez2rAhJNwefFSjY6dmomvrxQBaamDyM+aLCxd7bq
/Jvrq2DQyTc2aA0bO1ptsucsqYKz/huTl65l44NAJd3gYQE8zWzOMdBmY4+X
T/mDNAGYlyY+b1/PRmrgkaDDQQL42Hag0lOXjdfLKx/vdBAA5d830fWNbMyO
C45MVxRAgXxp70oDNhbVL5aX+c0HC/WIj7xNbNQ8lvCjrJcP4Q6k3182s5Eh
/vN1UxYf6MffiEdsZaPta4veDZf5UBz1QIpiRPDXvpE16scH61s+CvnbCLxa
O+aO7eXD52d6rG0mbLQiuWSBMR+iGsRX9m4n3qu0svPtWj4w3zVp+ZqxUWJ9
yapOBh92Lz5gkmbBxmqarG3NXx58VVa11trJxsqYXLHqrzy4sPHbngYrNu55
qxLJeMcDtnWJq9MuNh44+lSli5i/ZR7hx37uZqNe0a7Bz/U8sA0xP33Zlo2x
qa0BzlxCb12XD2fbs5FTk+moXcyDi7n9l4sd2DjmL1Pm8YQHyoL7iRZ72Ogb
qH7pTw6hZ9QnM3v3shFqNE/PEPM/INHk2eH9bIyHvK3WWYR/sRTe5AE2fuH0
Kf28y4NGz5HWKGc2mqwVTAwT9on2Df1yB9l45lpQuBpxnm5w8fOdQ2wMwzgo
JO6ru9fze40bGxvL9x2MIfz5Sq9cUOnORq5u2OfcfB5QA4MUdniysaXR7qZM
EQ+qBxqXvT7MRofB05OlFTzw3kHV8jxCxO+ejdm9Wh4oFh3Z8usoGz3WVWe2
tPGAzyzfGXmMjc9zn/do9vHgyEWpA7I+bBT0dEU3jRD6ZWLf0Qxfgg/TPaQb
hB6t3JcXtPoEG6+WP8tNmcsHj9qZ6PKTbHzS5LGlisQHGU3LZDN/Ng6GjyaS
VPngJjFW4B7IxnCRsQ/Tgg/S3ij4EcTGOOnOYy0ufHjRFdcWfoaNQeVZzKsB
fJDM0fyaHsrGp4bhrnCfD4VyYdOrwtgo+d57mMHlg9NZ0cKycDYmj177O/OK
D8+s/JZ3R7FxYupW7W1C7zhOFjhJx7Dxk86qX9wLApBwmXMsLZaN/cWxXh8e
CCCv0eaMehwbfbZK0zvqBTAr/WeKSQJh37pt8V2qCh4Y6baHphD5ozV53D2t
Cn7Elxp9y2JjU8bDC1tfVUPcKv4KUQUbVcU47WuD6+CB7p4FYVw2Grm8qox5
WAeVWyeGNPlsTLEoL0wj9MxXB5Wsq9VsXHNPPKF4dT2YRV1kWDWxMXrJ1JPs
3npwucqZEWtho87EBclrcxsg8GZZb34rgf+5F/X96gZ48PRrinQ7G90NFfZG
hTbA3DfWcsJXbCxJKmGNKjYC7dN/4yGv2fiieHX/tH4jaP2IaFvdx8aqzDo5
VadGOLioKPbKWzYe0hldXXS3EQJJO4/Cezae+Gpas6iqEeJZI2ajAwS/h3MN
Dgw0AldHaYHlEBvbdnh0f6Q3QfeWgqGZYTZu/d2ZIbWxCUZ37KjJ+8RGtb3b
bijaNgH9UEj44q9sVDc3thRcaALtY4ouFaNs3CZv0WZH6C3zwCfo/Y2NmxOv
y5UUNkFQ3MDf5gk2sl17zne8aYL4G8G9Z34S9SH/tzp8vAmy78mXrppkY65p
8MBX8WbgPclL6Zsi+C5YvExGrhm6y4wDYv6wsbUkl/qJ3QxjtW9tDf6yceq2
frbfmmaY135a+8sMG3VlVk3n6DcDvV9G7pYYBz1mz1yJM26G9SM54+azOThb
ULSWYdUMOyYM26bFOVi3YecsW4dmOPSv73HuHA5+XD7jsc6pGYIX+sfuncfB
fL/A5YWuzZAgL31UcgEH1x1Zbdbn2QzZzIdmZQs56DjLdt2DI83AX7llxRFJ
Dq4dFYsjeTfDq/Wv51MXc3D7G3kXVcIe23xiqHEJBx9Eaf3pI87P3yFVE7SU
gxaNl/7qHG4Ghv29zJWyHOz9d3OPjhuB9yCEv5bj4B3jL3Z9BB4L727nSyQO
OuhlRax0bAbX0z64UZGD1Hd0AceawBuxkPEfmYOnV7psrTNphmtX7v5NVeJg
8syVcKVNzZCTqt9rSuPgCQl9S+ZaAm/Wy5LfdA7GHnpe8Uq5GXryvVOymRwc
Tti03ozUDN9K5wU4sjl48aiWa8BcAm/tbduFyhy8UKts5PqjCZiiDdolyzjY
Xd6hSBpoAp0+kezh5Rw89HW915XWJnD7LtFWv4KDnBkSZTST0OPZhi171Tk4
IUpr9bvSBLbOEY2jqzjoXxW47E9AE2xrFa+R1+Tg27+SX5S3N4FKzuxSZx0O
+u2ykT7V3wh0ly3FE7ocXGOWE5nOawQSOez5eT0O+mZe6/hJ5Pfc87PyHxlw
MPiQeZ+xWyN8cBHLmtpKxMPhvxUr3jdALxnvXDbiYFmOosi/sgE6hCHpDGMO
Fsm4d6vebICqTf9SjEw5aPO5eatoVwNkUmZir+7koJnWryPy5fVwSPQnQG0f
B1W3Hrq66Wwd7I3eeKpsPwf3uNa6O9vUwW4M8rN04iD5sVOom3odGOb9Pnry
IAd/SC8Q39BTC8oXp1x4nhzc1n018ZN2LQxs/mXucIqDfX1/TIUT1dAzud70
sz8H86zj3s9qqQbR41PGIac5uC/hp2zq/Wrg035uzgrm4MvLZ9Jpe6vhztTE
+m9hHFSjOVQaN1ZBar6WVkQEBzXeRSyJfFAF8e4nNBWiiPxzUFFxjaqCsJff
VxpEc1B0tyJZzbAKXJ6MM6OvcLDHgpwRUieAI2G7pk2vcnDeu3YnJPrlyV0F
XZIJHLQ/fmpIKloAF36cjI1L5OCmreF7R3cIIL6m09M6mbDpUdkyawVwI0nH
SC6VgwvP/Ql0ViD67YapP0m3OFi6VXLnrQ+EHljo2OWQzsE530XHklr4wHtd
8lQpg4PX402Nuor50JCrFNt3h+Bv068bLpl86DgT7JmeycHwDO3RTVf50GfR
Z+h8j4Otrd88fEL48JGxicl5wMEPn33eznjzYWws7c/gQ+K9Y1qv/jvAhyne
v857ORxs5H44p2/Nh9kJTk89HnFw0aDLswkjYt4c4sWseMxB+lTPqMJGPshr
sz0/5xP1tnrG+aEmoWfmhhvmPeVg0EfD3hw1Pqh2DTCOF3Dwb6pZN4vY1zUf
GP7RLOTgle2Gp6TofNA7ndX5vYi4f9+Z4OMUPhiazn36/AWH6N8ztuaKhH5S
co/xLyXey9ugcEeBD3afaz02lHPQcOalny/x3alc1fBPBQdNjl2sKyf+Pxwb
zSjncrD5giwpgrj/xIFPv8/yOfh8s/7sasL/mTVmnVjFwdF9f7tCVhD6aVbu
k9k1HHTye3r+GaGf4kSSMVW1HFyZdOj+fn0+pN496hFVz8G9N1f4hRB66+6J
lq0mjRwsr01rlt3Nh1yj1YyFzQR/XZ5IJuZzISnud2MLBxfrDExf9uEDd2js
ZYyQgwU6Nb1eYXyoL7Z6YiniYCZp2uXpNT70Osp6tL8k+iXo8NzKifisPLH1
ehcHJ2U1fjS282F0uoNu94qo90Vnos//R8QjPfFlTy+B/7e32Be6ABYd/5V/
s5/IZ6ffTy7pCUBus/3l/W856KzsdeiwnQCWD5C3vh/goKLAnNxyTQBrCgLp
mR84OKRrE230XAB6ka+nXIeI/igq737XSejd5bfyRz5x8IXDyMfDtCrw9WLS
v30j+HNtkuorJPS2/rmpp985qBIWW3bjTRVESr3vOPGDgyE9L07pL6iG5Md3
L01OcnA9bc+umf1EvYVKuJf85uBg3ARF8lI15Fi5bgmeJvIx8J3+y6JqKGDX
0DbNcPBzn1Wy5YdqqPiuMvXvHwdnGdx+f1y2Bv4Hp6rmdQ==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$11072#3"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.025], 
        Scaled[0.025]}, {
        Scaled[0.025], 
        Scaled[0.025]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {False, False}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox["\"Probabilities\"", TraditionalForm], None}, {
        FormBox["\"\[CapitalOmega] t / \[Pi]\"", TraditionalForm], None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {Automatic, Automatic}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotRange -> {All, All}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.025], 
        Scaled[0.025]}, {
        Scaled[0.025], 
        Scaled[0.025]}}, Ticks -> {Automatic, Automatic}}, AxesStyle -> 
    Automatic, FrameStyle -> Automatic, PlotRangePadding -> Scaled[0.025]], 
   FormBox[
    FormBox[
     TemplateBox[{
       TagBox[
        FrameBox[
         StyleBox["1", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["2", Smaller, StripOnInput -> False]], "Placeholder"], 
       TagBox[
        FrameBox[
         StyleBox["3", Smaller, StripOnInput -> False]], "Placeholder"]}, 
      "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline), AxesStyle -> 
                    Automatic, FrameStyle -> Automatic, PlotRangePadding -> 
                    Scaled[0.025]], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline), AxesStyle -> 
                    Automatic, FrameStyle -> Automatic, PlotRangePadding -> 
                    Scaled[0.025]], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline), AxesStyle -> 
                    Automatic, FrameStyle -> Automatic, PlotRangePadding -> 
                    Scaled[0.025]], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.368417`", ",", "0.506779`", ",", "0.709798`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.880722`", ",", "0.611041`", ",", "0.142051`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.560181`", ",", "0.691569`", ",", "0.194885`"}],
                     "]"}], NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8284144926337547`*^9},
 CellLabel->"Out[109]=",
 CellID->1405116957,ExpressionUUID->"ebd84350-042b-4571-98c6-e92ce53d00c0"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell["Fidelity and Trace Distance", "Section",
 CellChangeTimes->{{3.818482836444128*^9, 3.818482843767706*^9}},
 CellTags->"Section20",
 CellID->438563579,ExpressionUUID->"1202c894-b995-4712-b4c1-263b2aaf4206"],

Cell["Entanglement, Entropy, Mutual Information", "Section",
 CellChangeTimes->{{3.818482846557666*^9, 3.8184828556359453`*^9}},
 CellTags->"Section21",
 CellID->774195749,ExpressionUUID->"4dc5bb3a-06b4-42b1-8000-4ff87d8e1e95"]
}, Open  ]]
},
Saveable->False,
WindowToolbars->"EditBar",
WindowSize->{996, 1340},
WindowMargins->{{Automatic, 167}, {Automatic, 0}},
DockedCells->Cell[
 "Quantum Computation Workbook", "Text", Background -> GrayLevel[0.9], 
  FontSize -> 12, CellFrameMargins -> {{22, 8}, {8, 8}}],
PageFooters->{{
   Cell["Quantum Computation Workbook", "Footer", CellMargins -> 4], None, 
   None}, {None, None, 
   Cell["Quantum Computation Workbook", "Footer", CellMargins -> 4]}},
PageFooterLines->{True, True},
CreateCellID->True,
FrontEndVersion->"12.2 for Mac OS X x86 (64-bit) (December 12, 2020)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["MathCaption"], CellMargins -> {{66, 10}, {7, 8}}, 
       CellGroupingRules -> {"SectionGrouping", 70}, TabSpacings -> {2.5}, 
       MenuSortingValue -> 1450, MenuCommandKey :> "8", FontFamily -> 
       "Source Sans Pro", FontSize -> 15], 
      Cell[
       StyleData["MathCaption", "Presentation"], 
       CellFrame -> {{0, 0}, {0, 1}}, CellMargins -> {{100, 10}, {10, 10}}, 
       LineSpacing -> {1, 5}, FontSize -> 24], 
      Cell[
       StyleData["MathCaption", "SlideShow"], 
       CellMargins -> {{
         0.135 FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}], 0.03 
          FrontEnd`AbsoluteCurrentValue[{WindowSize, 1}]}, {10, 10}}, 
       FontSize -> 22], 
      Cell[
       StyleData["MathCaption", "Printout"], 
       CellMargins -> {{49, Inherited}, {Inherited, Inherited}}, Hyphenation -> 
       True]}, Open]], 
   Cell[
    StyleData["Code"], MenuSortingValue -> 1530, MenuCommandKey :> None]}, 
  Visible -> False, FrontEndVersion -> 
  "12.2 for Mac OS X x86 (64-bit) (December 12, 2020)", StyleDefinitions -> 
  "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"a9b5e516-22bb-4dc2-98c0-90d5a5075e92"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "TableOfContents"->{
  Cell[1463, 43, 4333, 128, 228, "Text",ExpressionUUID->"8eb87862-8a7a-46f7-b663-9a2dca507f44",
   CellTags->"TableOfContents",
   CellID->505790733]},
 "Section17"->{
  Cell[5799, 173, 203, 3, 67, "Section",ExpressionUUID->"fa9ff27c-87ff-46e9-bf50-7c1317b795c2",
   CellTags->"Section17",
   CellID->1928249408]},
 "Section18"->{
  Cell[6005, 178, 229, 3, 53, "Section",ExpressionUUID->"b0d572e6-3885-41cf-9b48-9851e334fa35",
   CellTags->"Section18",
   CellID->412083379]},
 "Section19"->{
  Cell[6259, 185, 210, 3, 53, "Section",ExpressionUUID->"9c99e641-43e1-466c-9420-861fa99d3d8b",
   CellTags->"Section19",
   CellID->250589278]},
 "Section11"->{
  Cell[6472, 190, 200, 3, 54, "Subsection",ExpressionUUID->"c7a390ed-699b-48e6-82c7-b3be738dd111",
   CellTags->"Section11",
   CellID->1423253627]},
 "Section12"->{
  Cell[6675, 195, 194, 3, 38, "Subsection",ExpressionUUID->"675ea5db-d943-4b5f-bdd1-9d64829fb4ed",
   CellTags->"Section12",
   CellID->830799894]},
 "Section13"->{
  Cell[6894, 202, 203, 3, 38, "Subsection",ExpressionUUID->"aa28c2d3-a5f5-4a00-b4bc-b08cf4f4fe24",
   CellTags->"Section13",
   CellID->702989565]},
 "Section20"->{
  Cell[201586, 4322, 211, 3, 67, "Section",ExpressionUUID->"1202c894-b995-4712-b4c1-263b2aaf4206",
   CellTags->"Section20",
   CellID->438563579]},
 "Section21"->{
  Cell[201800, 4327, 227, 3, 53, "Section",ExpressionUUID->"4dc5bb3a-06b4-42b1-8000-4ff87d8e1e95",
   CellTags->"Section21",
   CellID->774195749]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"TableOfContents", 204025, 4383},
 {"Section17", 204193, 4387},
 {"Section18", 204356, 4391},
 {"Section19", 204518, 4395},
 {"Section11", 204680, 4399},
 {"Section12", 204846, 4403},
 {"Section13", 205011, 4407},
 {"Section20", 205176, 4411},
 {"Section21", 205341, 4415}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 202, 4, 98, "Title",ExpressionUUID->"b9269d85-53e8-4b1a-8e3e-227531db259b"],
Cell[785, 28, 445, 7, 52, "Input",ExpressionUUID->"e413860f-2c01-4a38-8435-7222f9cbb255"],
Cell[1233, 37, 227, 4, 30, "Input",ExpressionUUID->"c494dd96-3d55-4e9b-80f6-3a2c6f835c3e"],
Cell[1463, 43, 4333, 128, 228, "Text",ExpressionUUID->"8eb87862-8a7a-46f7-b663-9a2dca507f44",
 CellTags->"TableOfContents",
 CellID->505790733],
Cell[5799, 173, 203, 3, 67, "Section",ExpressionUUID->"fa9ff27c-87ff-46e9-bf50-7c1317b795c2",
 CellTags->"Section17",
 CellID->1928249408],
Cell[6005, 178, 229, 3, 53, "Section",ExpressionUUID->"b0d572e6-3885-41cf-9b48-9851e334fa35",
 CellTags->"Section18",
 CellID->412083379],
Cell[CellGroupData[{
Cell[6259, 185, 210, 3, 53, "Section",ExpressionUUID->"9c99e641-43e1-466c-9420-861fa99d3d8b",
 CellTags->"Section19",
 CellID->250589278],
Cell[6472, 190, 200, 3, 54, "Subsection",ExpressionUUID->"c7a390ed-699b-48e6-82c7-b3be738dd111",
 CellTags->"Section11",
 CellID->1423253627],
Cell[6675, 195, 194, 3, 38, "Subsection",ExpressionUUID->"675ea5db-d943-4b5f-bdd1-9d64829fb4ed",
 CellTags->"Section12",
 CellID->830799894],
Cell[CellGroupData[{
Cell[6894, 202, 203, 3, 38, "Subsection",ExpressionUUID->"aa28c2d3-a5f5-4a00-b4bc-b08cf4f4fe24",
 CellTags->"Section13",
 CellID->702989565],
Cell[CellGroupData[{
Cell[7122, 209, 305, 5, 38, "MathCaption",ExpressionUUID->"ebd3c59d-44a9-4630-a179-f669e0c63498",
 CellID->2033884322],
Cell[7430, 216, 368, 8, 30, "Input",ExpressionUUID->"7399f7aa-c17e-43bf-8722-1c973b9eba10",
 CellID->1723367126],
Cell[CellGroupData[{
Cell[7823, 228, 855, 23, 52, "Input",ExpressionUUID->"9c52f8ca-2d85-4e43-a89b-c3894a731c1f",
 CellID->1479265243],
Cell[8681, 253, 603, 17, 52, "Output",ExpressionUUID->"70e65bbd-448e-48c3-b8df-e8c9bc720274",
 CellID->223096901],
Cell[9287, 272, 843, 28, 38, "Output",ExpressionUUID->"255341a1-15d7-45ce-87be-07e0b8e1f27b",
 CellID->83167445]
}, Open  ]],
Cell[10145, 303, 351, 6, 58, "Text",ExpressionUUID->"1b688c89-2ae3-4480-822f-d783b9bc6ca8",
 CellID->1680926448],
Cell[CellGroupData[{
Cell[10521, 313, 705, 18, 73, "Input",ExpressionUUID->"4c13d650-e480-4ef2-b019-c6848d73478d",
 CellID->207320120],
Cell[11229, 333, 4348, 117, 130, "Output",ExpressionUUID->"61047160-eee8-455d-bd75-f8399e6f0777",
 CellID->899782906]
}, Open  ]],
Cell[15592, 453, 915, 28, 94, "Input",ExpressionUUID->"8b22d473-4147-4c13-9782-73e7196725a2",
 CellID->1274989594],
Cell[CellGroupData[{
Cell[16532, 485, 528, 14, 52, "Input",ExpressionUUID->"f3633997-16e8-4338-9fd2-e23a22616e80",
 CellID->533744095],
Cell[17063, 501, 2923, 92, 88, "Output",ExpressionUUID->"a6b8fd04-dc88-4096-ace3-81b9069afb91",
 CellID->455216710],
Cell[19989, 595, 3197, 101, 50, "Output",ExpressionUUID->"417d1a14-164e-4d6d-98e4-8dd9503c4cd5",
 CellID->1490494356]
}, Open  ]],
Cell[CellGroupData[{
Cell[23223, 701, 1077, 30, 94, "Input",ExpressionUUID->"0e05b1ac-ce86-4528-8e9a-04e450487079",
 CellID->305576989],
Cell[24303, 733, 2227, 67, 86, "Output",ExpressionUUID->"a65ba251-efc6-47d2-bfba-651e6c541066",
 CellID->184641738]
}, Open  ]],
Cell[CellGroupData[{
Cell[26567, 805, 975, 29, 30, "Input",ExpressionUUID->"d25d1447-e8aa-41b8-875f-8c74ca41b203",
 CellID->1751122607],
Cell[27545, 836, 380, 11, 49, "Output",ExpressionUUID->"ea624ce9-ad24-4df6-8cc3-ab117fd738f8",
 CellID->978806722]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[27974, 853, 665, 19, 66, "MathCaption",ExpressionUUID->"4e37d66f-abd0-45e7-aec0-eb8a3f926325",
 CellID->1536645940],
Cell[CellGroupData[{
Cell[28664, 876, 343, 10, 52, "Input",ExpressionUUID->"31dd93f0-4423-40d0-9870-ddc81c1af2aa",
 CellID->963207285],
Cell[29010, 888, 561, 16, 61, "Output",ExpressionUUID->"aeea7016-cd08-4c9e-85e2-efdb7541a58b",
 CellID->1136203733]
}, Open  ]],
Cell[29586, 907, 195, 2, 35, "Text",ExpressionUUID->"aa529829-6ed4-46a0-98c0-3c4ae41fb547",
 CellID->983231550],
Cell[29784, 911, 197, 5, 30, "Input",ExpressionUUID->"e5c1a6d6-fe4e-47d2-a7aa-aaa6494a119e",
 CellID->1701417680],
Cell[29984, 918, 193, 2, 35, "Text",ExpressionUUID->"e8596d6a-f092-4b10-9c7b-d0d70a206baa",
 CellID->1866066132],
Cell[CellGroupData[{
Cell[30202, 924, 578, 15, 52, "Input",ExpressionUUID->"6c07a83c-d1a4-44f5-b260-1ac6d961de73",
 CellID->682224499],
Cell[30783, 941, 839, 28, 38, "Output",ExpressionUUID->"250e2bb3-4283-4e08-b9d7-65e6f49ae782",
 CellID->1265326246]
}, Open  ]],
Cell[31637, 972, 344, 6, 35, "Text",ExpressionUUID->"939a6586-69a2-4c4e-861f-48a60860c987",
 CellID->2077920708],
Cell[CellGroupData[{
Cell[32006, 982, 596, 14, 52, "Input",ExpressionUUID->"da83ac44-927d-430d-ab5d-e42677dc2de6",
 CellID->800188955],
Cell[32605, 998, 940, 28, 56, "Output",ExpressionUUID->"6eb4edf4-5977-48bb-b2d6-0cc04f481cd4",
 CellID->86443218],
Cell[33548, 1028, 3345, 103, 69, "Output",ExpressionUUID->"1eb86c98-c28b-4a1b-bb0b-5a678a83358a",
 CellID->1152219554]
}, Open  ]],
Cell[36908, 1134, 342, 6, 58, "Text",ExpressionUUID->"d0060464-9014-4d6b-95cf-68a72293762a",
 CellID->1724544649],
Cell[CellGroupData[{
Cell[37275, 1144, 483, 11, 73, "Input",ExpressionUUID->"52edc1ef-bb70-484e-b60e-56b4eb454d66",
 CellID->729258573],
Cell[37761, 1157, 7345, 207, 98, "Output",ExpressionUUID->"548c8487-bb26-421c-a50f-e1d9d8b011c3",
 CellID->1970112830],
Cell[45109, 1366, 1385, 42, 88, "Output",ExpressionUUID->"93e6c684-211a-44e0-a8bb-b3bba1ccfb4f",
 CellID->1783464364]
}, Open  ]],
Cell[46509, 1411, 264, 5, 35, "Text",ExpressionUUID->"4ccf2410-cf38-4faa-b3d4-f0092c75d7f0",
 CellID->122769520],
Cell[CellGroupData[{
Cell[46798, 1420, 1037, 26, 178, "Input",ExpressionUUID->"3283de1b-f193-4fc8-ab88-340062faa246",
 CellID->719143774],
Cell[47838, 1448, 1514, 41, 48, "Output",ExpressionUUID->"fb2e3ec8-58c0-4282-b3b2-602a30f14426",
 CellID->855271031]
}, Open  ]],
Cell[49367, 1492, 285, 5, 35, "Text",ExpressionUUID->"afab8994-6761-42ac-9bd6-2ebaf8ac526e",
 CellID->2125434902],
Cell[CellGroupData[{
Cell[49677, 1501, 539, 16, 30, "Input",ExpressionUUID->"3349b63c-cbe3-40ec-a42d-5977d5b8b87e",
 CellID->1210483635],
Cell[50219, 1519, 958, 25, 37, "Output",ExpressionUUID->"1f785014-b353-471e-8ad0-efd8dc47adc0",
 CellID->384148147]
}, Open  ]],
Cell[CellGroupData[{
Cell[51214, 1549, 1206, 31, 157, "Input",ExpressionUUID->"ba66a32f-e884-4ea2-ae86-0d64ae54ecff",
 CellID->1754552550],
Cell[52423, 1582, 6610, 134, 251, "Output",ExpressionUUID->"48187693-6f7a-4f3a-90ea-cca92ac9eb75",
 CellID->73430801]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[59082, 1722, 175, 2, 38, "MathCaption",ExpressionUUID->"2e9a2b1a-adb3-4005-b396-f1ef1086cb3b",
 CellID->210970783],
Cell[59260, 1726, 182, 4, 30, "Input",ExpressionUUID->"12f3bbd3-901a-48d9-98e9-747cdfb6ed84",
 CellID->290448684],
Cell[59445, 1732, 214, 4, 35, "Text",ExpressionUUID->"20d6a141-a966-4bf0-8dbd-9ed2fdc7413d",
 CellID->340702357],
Cell[CellGroupData[{
Cell[59684, 1740, 928, 27, 73, "Input",ExpressionUUID->"103b8eed-e401-4381-981d-c5eb7caa3bda",
 CellID->993111197],
Cell[60615, 1769, 863, 25, 92, "Output",ExpressionUUID->"f876cfc5-ad5a-4416-8cb2-4f5975230c11",
 CellID->710004947]
}, Open  ]],
Cell[CellGroupData[{
Cell[61515, 1799, 1403, 36, 178, "Input",ExpressionUUID->"c0ef512d-bfe3-4b2d-9e7a-1e97d979e0ec",
 CellID->501635503],
Cell[62921, 1837, 1607, 65, 38, "Output",ExpressionUUID->"d9dd99d6-f2c6-44af-84b6-c8a24ac5534c",
 CellID->295088378],
Cell[64531, 1904, 3608, 109, 73, "Output",ExpressionUUID->"f38c3a29-300c-4896-b96f-6e409060c84e",
 CellID->1010628123]
}, Open  ]],
Cell[CellGroupData[{
Cell[68176, 2018, 1444, 37, 241, "Input",ExpressionUUID->"8b46c71b-3a39-429c-a697-c857534e33ff",
 CellID->260219023],
Cell[69623, 2057, 225, 5, 34, "Output",ExpressionUUID->"883af5de-f659-493b-bf3c-f278dcc857ca",
 CellID->972810776]
}, Open  ]],
Cell[CellGroupData[{
Cell[69885, 2067, 709, 17, 94, "Input",ExpressionUUID->"2bf18ac1-8c7e-4730-9550-ea572345a8cb",
 CellID->1542313529],
Cell[70597, 2086, 130938, 2230, 256, "Output",ExpressionUUID->"ebd84350-042b-4571-98c6-e92ce53d00c0",
 CellID->1405116957]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[201586, 4322, 211, 3, 67, "Section",ExpressionUUID->"1202c894-b995-4712-b4c1-263b2aaf4206",
 CellTags->"Section20",
 CellID->438563579],
Cell[201800, 4327, 227, 3, 53, "Section",ExpressionUUID->"4dc5bb3a-06b4-42b1-8000-4ff87d8e1e95",
 CellTags->"Section21",
 CellID->774195749]
}, Open  ]]
}
]
*)

